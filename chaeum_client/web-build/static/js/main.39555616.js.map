{"version":3,"file":"static/js/main.39555616.js","mappings":"iRAEA,MAAMA,GAAeC,EAAAA,EAAAA,iBAEd,SAASC,GAAc,SAAEC,IAC9B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,IAOhCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAL1C,+CAiBF,OAVAK,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAMJ,OALIR,IACFQ,EAAQC,aAAY,KAClBL,GAAYM,GAASA,EAAO,MAC3B,MAEE,IAAMC,cAAcH,KAC1B,CAACR,KAGFY,EAAAA,EAAAA,KAAChB,EAAaiB,SAAQ,CACpBC,MAAO,CACLd,YACAC,eACAE,UACAE,iBACAC,qBACAP,SAEDA,GAGP,C,iCClCA,MAAM,OACJgB,EAAM,WACNC,EAAU,UACVC,EAAS,MACTC,GACEC,EAAAA,QAAUC,YAAYC,OAAS,CAAC,EAEpCC,QAAQC,IAAI,mBAAoB,CAAER,SAAQC,aAAYC,YAAWC,UAEjE,MAAMM,EAAiB,CACrBT,OAAQA,EACRC,WAAYA,EACZC,UAAWA,EACXC,MAAOA,GAIJO,EAAAA,QAASC,KAAKC,QACjBF,EAAAA,QAASG,cAAcJ,GAGlB,MAAMK,EAAOJ,EAAAA,QAASI,O,uGCrB7B,MAAM,SAAEC,GAAaX,EAAAA,QAAUC,WAAWC,MAG1CU,eAAeC,IACb,MAAMC,QAAcC,EAAYC,aAAa,eAC7C,MAAO,CACLC,cAAeH,EAAQ,UAAUA,IAAU,GAC3C,eAAgB,mBAEpB,CAGA,MAAMI,EAAMC,EAAAA,QAAMC,OAAO,CACvBC,QAAS,GAAGV,IACZW,QAAS,MAyDJV,eAAeW,EAAqBC,GACzC,MAAMC,QAAgBZ,IACtB,OAAOK,EAAIQ,IAAI,iCAAiCF,IAAQ,CAAEC,WAC5D,CAkBOb,eAAee,IACpB,MAAMF,QAAgBZ,IAItB,aAHkBK,EAAIQ,IAAI,SAAU,CAClCD,aAESG,IACb,CA8DOhB,eAAeiB,IACpB,MAAMJ,QAAgBZ,IAItB,aAHkBK,EAAIQ,IAAI,SAAU,CAClCD,aAESG,IACb,CApJAV,EAAIY,aAAaC,SAASC,KACvBC,GAAQA,IACTrB,UAC+B,MAAzBsB,EAAIH,UAAUI,cACVpB,EAAYqB,gBAAgB,eAG7BC,QAAQC,OAAOJ,MAqL1B,UC9Le,SAASK,GAAY,WAAEC,IACpC,MAAM,YAAEC,EAAW,YAAEC,GAAgB1C,EAAAA,QAAUC,YAAYC,OAAS,CAAC,GAC9DyC,EAAWC,IAAgB7D,EAAAA,EAAAA,WAAS,IACpC8D,EAASd,EAAUe,GAAeC,EAAAA,eAAsB,CAC7DN,cACAC,iBAGFtD,EAAAA,EAAAA,YAAU,KACe,YAAnB2C,GAAUiB,MAAsBjB,EAASkB,gBAAgBC,SAC3DC,EAAqBpB,EAASkB,kBAE/B,CAAClB,IAEJ,MAAMoB,EAAuBvC,OAASsC,QAASE,EAAYC,kBACzDT,GAAa,GACb,IACE,IAAKQ,EAAY,MAAM,IAAIE,MAAM,sEAGjC,MAAMC,EAAajD,EAAAA,QAASI,KAAK8C,mBAAmBD,WAClDH,EACAC,IAEI,KAAEI,SAAe/C,EAAKgD,qBAAqBH,GAG3CI,QAAwBF,EAAKG,YAAW,GAC9CzD,QAAQC,IAAI,iBAAkBqD,EAAKG,cAGnC,MAAM3B,QDZLrB,gBAA+B,QAAEsC,IACtC,OAAOhC,EAAI2C,KAAK,cAAe,CAAEX,WACnC,CCUwBY,CAAgB,CAAEZ,QAASS,KACrCN,YAAaU,EAAKN,KAAMO,GAAgB/B,EAAIL,WAG9Cb,EAAYkD,aAAa,cAAeF,GAC9C5D,QAAQC,IAAI,aAAc2D,SAGpBhD,EAAYkD,aAAa,SAAUC,OAAOF,EAAYG,KAEvDH,EAAYI,SAELJ,EAAYK,cAGtB7B,EAAW8B,QAAQ,QAFnB9B,EAAW8B,QAAQ,gBAFnB9B,EAAW8B,QAAQ,OAMvB,CAAE,MAAOC,GACPpE,QAAQoE,MAAM,0CAAkBA,GAC5BA,EAAMxC,WACR5B,QAAQoE,MAAM,mBAAoBA,EAAMxC,SAASI,QACjDhC,QAAQoE,MAAM,iBAAkBA,EAAMxC,SAASH,OAEjD4C,EAAAA,QAAMC,MACJ,kCACAF,EAAMxC,UAAUH,MAAM8C,SAAWH,EAAMG,QAE3C,CAAC,QACC9B,GAAa,EACf,GAiBF,OACE+B,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAA2BL,MAAOC,EAAOK,QAChE1F,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAOO,OAAOzG,SAAC,2CAC5Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBL,MAAOC,EAAOQ,aAUhB7F,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAO,CAACC,EAAOU,aAAc7C,GAAamC,EAAOW,gBACjDC,QAhCoB9E,UACxB,GAAKiC,EAIL,UACQnC,EAAKiF,gBACL7C,EAAY,CAAE8C,OAAQ,kBAC9B,CAAE,MAAOrB,GACPpE,QAAQoE,MAAM,yCAAYA,GAC1BC,EAAAA,QAAMC,MAAM,kCAAU,qDACxB,MATED,EAAAA,QAAMC,MAAM,4BAAS,uFA+BnBoB,SAAUlD,IAAcE,EAAQjE,UAEhCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAOgB,WAAWlH,SAC5B+D,EAAY,+BAAa,oDAKpC,CA1GAoD,EAAWC,2BA4GX,MAAMlB,EAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNC,WAAY,SAEZC,gBAAiB,QAEnBf,OAAQ,CAAEgB,SAAU,IACpBC,YAAa,CACXF,gBAAiB,UACjBG,MAAO,MACPC,QAAS,GACTC,aAAc,EAEdN,WAAY,UAEdO,UAAW,CAAEC,WAAY,QACzBnB,aAAc,CACZoB,YAAa,OACbC,YAAa,EACbN,MAAO,MACPC,QAAS,GACTC,aAAc,EACdK,UAAW,GACXX,WAAY,UAEdL,WAAY,CAAC,EACbX,KAAM,CACJoB,MAAO,IACPQ,OAAQ,GACRC,aAAc,GACdF,UAAW,KAEbxB,UAAW,CACTiB,MAAO,IACPQ,OAAQ,IACRD,UAAW,GACXE,aAAc,M,cC/JH,SAASC,GAAW,MAAEtH,EAAK,aAAEuH,EAAY,YAAEC,IACxD,OACE1H,EAAAA,EAAAA,KAAC2H,EAAAA,QAAS,CACRvC,MAAOC,EAAOuC,MACd1H,MAAOA,EACPuH,aAAcA,EACdC,YAAaA,GAGnB,CAEA,MAAMrC,EAASmB,EAAAA,QAAW7E,OAAO,CAC/BiG,MAAO,CACLd,MAAO,IACPQ,OAAQ,GACRF,YAAa,EACbD,YAAa,UACbH,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,MCrBN,SAASC,GAAW,MAAEC,EAAK,QAAE/B,EAAO,SAAEG,EAAQ,MAAEhB,IAC7D,OACEpF,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAO,CACLC,EAAO4C,OACP7C,EACA,CAAEuB,gBAAiBP,EAAW,UAAY,YAE5CA,SAAUA,EACVH,QAASA,EAAQ9G,UAEjBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAO6C,WAAW/I,SAAE6I,KAGvC,CAEA,MAAM3C,EAASmB,EAAAA,QAAW7E,OAAO,CAC/BsG,OAAQ,CACNnB,MAAO,IACPQ,OAAQ,GACRN,aAAc,GACdN,WAAY,SACZyB,eAAgB,UAElBD,WAAY,CACVE,MAAO,OACPC,UAAW,SACXzB,SAAU,MCzBC,SAAS0B,IACtB,MAAMvF,GAAawF,EAAAA,EAAAA,iBAEnB,OACErD,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACG,QAASA,IAAMlD,EAAWyF,SAASrJ,UACnDa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAA4BL,MAAOC,EAAOoD,eAEnEzI,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAA2BL,MAAOC,EAAOK,SAGtE,CAEA,MAAML,EAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACToD,WAAY,GACZC,cAAe,MACfR,eAAgB,gBAChBzB,WAAY,UAEd+B,UAAW,CACT3B,MAAO,GACPQ,OAAQ,GACRsB,WAAY,WAEdlD,KAAM,CACJoB,MAAO,GACPQ,OAAQ,GACRsB,WAAY,aCvBD,SAASC,GAAW,WAAE9F,IACnC,MAAO+F,EAAMC,IAAWzJ,EAAAA,EAAAA,UAAS,KAC1B4D,EAAWC,IAAgB7D,EAAAA,EAAAA,WAAS,IAE3CK,EAAAA,EAAAA,YAAU,KACR,iBACsB2B,EAAYC,aAAa,gBAE3CwD,EAAAA,QAAMC,MAAM,4BAAS,2DAAe,CAClC,CAAEgE,KAAM,eAAM/C,QAASA,IAAMlD,EAAW8B,QAAQ,WAGrD,EAPD,KAQC,IAyBH,OACEK,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAO2C,MAAM7I,SAAC,4CAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAO4D,MAAM9J,SAAC,wDAC3Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,KAChBL,MAAOC,EAAO6D,SAEhBlJ,EAAAA,EAAAA,KAACwH,EAAU,CACTtH,MAAO4I,EACPrB,aAAcsB,EACdrB,YAAY,iDAEd1H,EAAAA,EAAAA,KAAC+H,EAAU,CACTC,MAAO9E,EAAY,yBAAY,4BAC/BkD,UAAW0C,GAAQ5F,EACnB+C,QAxCa9E,UACjB,IAAK2H,EAAKK,OACR,OAAOpE,EAAAA,QAAMC,MAAM,eAAM,4DAE3B7B,GAAa,GACb,IACE,MAAMX,QLaLrB,eAAgCwD,GACrC,MAAM3C,QAAgBZ,IACtB,OAAOK,EAAI2H,MAAM,iBAAkB,CAAEzE,YAAY,CAAE3C,WACrD,CKhBwBqH,CAAiBP,GACnCpI,QAAQC,IAAI,uDAAqB6B,EAAIL,MACrCY,EAAW8B,QAAQ,eACrB,CAAE,MAAOpC,GACP/B,QAAQoE,MAAM,uDAAqBrC,EAAIH,UAAYG,GACtB,MAAzBA,EAAIH,UAAUI,OAChBqC,EAAAA,QAAMC,MAAM,4BAAS,2DAAe,CAClC,CAAEgE,KAAM,eAAM/C,QAASA,IAAMlD,EAAW8B,QAAQ,YAGlDE,EAAAA,QAAMC,MAAM,eAAM,wEAEtB,CAAC,QACC7B,GAAa,EACf,GAqBIiC,MAAOC,EAAOiE,QAItB,CAEA,MAAMjE,EAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CAAEmB,KAAM,EAAGM,QAAS,GAAIJ,gBAAiB,QACpDqB,MAAO,CAAEuB,eAAgB,GAAI3C,SAAU,GAAIwB,MAAO,WAClDa,MAAO,CAAErC,SAAU,GAAIM,WAAY,OAAQK,aAAc,GACzD+B,IAAK,CAAEjC,UAAW,KAClB6B,MAAO,CACLM,SAAU,WACVC,IAAK,IACLC,KAAM,IACN5C,MAAO,GACPQ,OAAQ,IACRsB,WAAY,a,wBCxED,SAASe,GAAmB,WAAE5G,IAC3C,MAAO6G,EAAUC,IAAevK,EAAAA,EAAAA,UAAS,OAClCwK,EAAaC,IAAkBzK,EAAAA,EAAAA,UAAS,OACxC4D,EAAWC,IAAgB7D,EAAAA,EAAAA,WAAS,IAE3CK,EAAAA,EAAAA,YAAU,KACR,iBACsB2B,EAAYC,aAAa,gBAE3CwD,EAAAA,QAAMC,MAAM,4BAAS,2DAAe,CAClC,CAAEgE,KAAM,eAAM/C,QAASA,IAAMlD,EAAW8B,QAAQ,WAGrD,EAPD,KAQC,IA8CH,OACEK,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAO2C,MAAM7I,SAAC,4CAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAO4D,MAAM9J,SAAC,2EAC3Ba,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,EAAO2E,aAAc/D,QAjDhC9E,UAChB,MAAM,OAAEuB,SAAiBuH,EAAYC,sCACrC,GAAe,YAAXxH,EACF,OAAOqC,EAAAA,QAAMC,MAAM,4BAAS,sFAE9B,MAAMmF,QAAeF,EAAYG,wBAAwB,CACvDC,eAAe,EACfC,QAAS,EACTC,QAAQ,IAEV,GAAIJ,EAAOK,SAAU,OAErB,MAAMC,QAAcC,EAAiBC,gBACnCR,EAAOS,OAAO,GAAGC,IACjB,CAAC,CAAEC,OAAQ,CAAEhE,MAAO,IAAKQ,OAAQ,OACjC,CAAEyD,SAAU,GAAKR,QAAQ,IAE3BV,EAAYY,EAAMI,KAClBd,EAAeU,EAAMF,SA+B8CpL,SAC9DyK,GACC5J,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQ,CAAEqF,IAAKjB,GAAYxE,MAAOC,EAAO6D,SAEhDhE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,EAAOqC,YAAYvI,SAAA,EAC9Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,EAAO2F,gBAAgB7L,SAAC,qCACrCa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBL,MAAOC,EAAOoD,kBAKtBzI,EAAAA,EAAAA,KAAC+H,EAAU,CACTC,MAAO9E,EAAY,yBAAY,4BAC/BkD,UAAWwD,GAAY1G,EACvB+C,QA5CiB9E,UACrB,IAAK2I,EACH,OAAO/E,EAAAA,QAAMC,MAAM,eAAM,+EAE3B7B,GAAa,GACb,IACE,MAAMX,QNLLrB,eAAoCyD,GACzC,MAAM5C,QAAgBZ,IACtB,OAAOK,EAAI2H,MAAM,iBAAkB,CAAExE,iBAAiB,CAAE5C,WAC1D,CMEwBiJ,CAAqBnB,GACvCpJ,QAAQC,IAAI,uDAAqB6B,EAAIL,MACrCY,EAAW8B,QAAQ,OACrB,CAAE,MAAOpC,GACP/B,QAAQoE,MAAM,uDAAqBrC,EAAIH,UAAYG,GACtB,MAAzBA,EAAIH,UAAUI,OAChBqC,EAAAA,QAAMC,MAAM,4BAAS,2DAAe,CAClC,CAAEgE,KAAM,eAAM/C,QAASA,IAAMlD,EAAW8B,QAAQ,YAGlDE,EAAAA,QAAMC,MAAM,eAAM,8EAEtB,CAAC,QACC7B,GAAa,EACf,GAyBIiC,MAAOC,EAAOiE,QAItB,CAEA,MAAMjE,EAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CAAEmB,KAAM,EAAGM,QAAS,GAAIJ,gBAAiB,QACpDqB,MAAO,CAAEuB,eAAgB,GAAI3C,SAAU,GAAIwB,MAAO,WAClDa,MAAO,CAAErC,SAAU,GAAIM,WAAY,OAAQK,aAAc,GACzDyC,aAAc,CACZlD,MAAO,IACPQ,OAAQ,IACRN,aAAc,GACdkE,SAAU,SACVvE,gBAAiB,UACjBwB,eAAgB,SAChBzB,WAAY,SACZyE,UAAW,SACX5D,aAAc,IACdF,UAAW,IAEbK,YAAa,CAAEjB,KAAM,EAAG0B,eAAgB,WAAYzB,WAAY,UAChEsE,gBAAiB,CAAE5C,MAAO,UAAWxB,SAAU,IAC/CsC,MAAO,CAAEpC,MAAO,OAAQQ,OAAQ,QAEhCgC,IAAK,CAAEjC,UAAW,K,wBC/GL,SAAS+D,KACtB,MAAMrI,GAAawF,EAAAA,EAAAA,iBAEb8C,GADQC,EAAAA,EAAAA,YACQxC,KAEtB,OACE5D,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAOC,GAAOkG,KACdtF,QAASA,IAAMlD,EAAWyI,SAAS,SAASrM,UAU5Ca,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAEMC,EADQ,UAAZ4F,EACY,KACA,MAEdjG,MAAOC,GAAOoG,UAIlBzL,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAOC,GAAOkG,KACdtF,QAASA,IAAMlD,EAAWyI,SAAS,QAAQrM,UAU3Ca,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAEMC,EADQ,SAAZ4F,EACY,KACA,MAEdjG,MAAOC,GAAOoG,UAIlBzL,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAOC,GAAOkG,KACdtF,QAASA,IAAMlD,EAAWyI,SAAS,WAAWrM,UAY9Ca,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAEMC,EADQ,YAAZ4F,EACY,KACA,MAEdjG,MAAOC,GAAOoG,WAKxB,CAEA,MAAMpG,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTgC,OAAQ,GACRqB,cAAe,MACfR,eAAgB,eAChBzB,WAAY,SACZC,gBAAiB,OACjB+E,eAAgB,EAChBvE,YAAa,OACbwE,YAAa,OACbC,aAAc,CAAE9E,MAAO,EAAGQ,QAAS,GACnCuE,cAAe,IACfC,aAAc,EACdC,OAAQ,GACRC,cAAe,IAEjBT,KAAM,CACJpD,eAAgB,SAChBzB,WAAY,UAWd+E,KAAM,CACJ3E,MAAO,GACPQ,OAAQ,GACRsB,WAAY,a,cC3GD,SAASqD,IAAc,QACpCC,EAAU,kCAAQ,KAClBC,EAAO,WAAU,YACjBC,IAEA,OACElH,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5B+F,EAAAA,EAAAA,MAACY,EAAAA,QAAgB,CACfV,MAAOC,GAAOgH,cACdpG,QAASmG,EAAYjN,SAAA,EAErBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOiH,YAAYnN,SAAE+M,KAClClM,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOkH,WAAWpN,UAC7Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOmH,SAASrN,SAAC,iBAIlC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOoH,aAAatN,SAAA,EAC/Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOqH,UAAUvN,SAAEgN,KAChCnM,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBL,MAAOC,GAAOoG,YAKxB,CAEA,MAAMpG,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTqD,cAAe,MACfR,eAAgB,gBAChBzB,WAAY,SACZW,UAAW,IAEbgF,cAAe,CACb1D,cAAe,MACfhC,gBAAiB,UACjBK,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,IACjBpB,WAAY,UAEd4F,YAAa,CACXlE,MAAO,OACPxB,SAAU,GACV+F,YAAa,GAEfJ,WAAY,CACVzF,MAAO,GACPQ,OAAQ,GACRX,gBAAiB,OACjBK,aAAc,GACdN,WAAY,SACZyB,eAAgB,UAElBqE,SAAU,CACRpE,MAAO,OACPxB,SAAU,GACVM,WAAY,OAEduF,aAAc,CACZ9D,cAAe,MACfjC,WAAY,UAEdgG,UAAW,CACTtE,MAAO,UACPxB,SAAU,GACVM,WAAY,MACZyF,YAAa,GAEflB,KAAM,CACJ3E,MAAO,GACPQ,OAAQ,GACRsB,WAAY,a,eCpFT,MAAMgE,GACA,UADAA,GAEL,UAFKA,GAGC,UAHDA,GAmBD,UCnBCC,GAEF,qBAFEA,GAGH,oBAHGA,GAID,sBAJCA,GAKL,kBCDKxH,GAASmB,EAAAA,QAAW7E,OAAO,CACtCmL,QAAS,CACPnE,cAAe,MACfjC,WAAY,SACZqG,IAAK,GACLjF,gBAAiB,GAEnBkF,IAAK,CACHrE,cAAe,MACfjC,WAAY,SACZqG,IAAK,GAEPE,cAAe,CACbzD,SAAU,YAEZ0D,UAAW,CACT1D,SAAU,WACVC,IAAK,EACLC,KAAM,GAER1B,MAAO,CACLpB,SAAU,GACVuG,WAAYN,IAEdO,MAAO,CACLtG,MAAO,GACPQ,OAAQ,M,wSCnBG,SAAS+F,IAAS,MAAErF,EAAK,aAAEsF,EAAY,aAAEC,EAAY,YAAEC,IACpE,MAAOC,EAASC,IAAcpO,EAAAA,EAAAA,UAASgO,IAChCK,EAAOC,IAAYtO,EAAAA,EAAAA,UAASiO,GAEnC,OACErI,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOyH,QAAQ3N,SAAA,EAC1B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO2H,IAAI7N,SAAA,EACtBa,EAAAA,EAAAA,KAAC6N,GAAAA,QAAS,CAAC5H,QAASA,IAAMyH,GAAW5N,IAASA,IAAMX,UAClD+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO4H,cAAc9N,SAAA,EAChCa,EAAAA,EAAAA,K,qkCAAS,CACP8G,MAAO,GACPQ,OAAQ,GACRc,MAAOqF,EAAUD,EAAc,YAEhCC,IAAWzN,EAAAA,EAAAA,KAAC8N,GAAS,CAAC1I,MAAOC,GAAO6H,kBAGzClN,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAE6I,QAE9BhI,EAAAA,EAAAA,KAAC6N,GAAAA,QAAS,CAAC5H,QAASA,IAAM2H,GAAS9N,IAASA,IAAMX,UAChDa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAEMC,EADJkI,EACY,KACA,MAEdvI,MAAOC,GAAO+H,YAKxB,CC3Be,SAASW,KACtB,MAAMhL,GAAawF,EAAAA,EAAAA,kBAEZyF,EAAQC,IAAa3O,EAAAA,EAAAA,UAAS,KAC9B4O,EAASC,IAAc7O,EAAAA,EAAAA,WAAS,GAGjC8O,EAAOA,KACXD,GAAW,Gb+BRhN,iBACL,MAAMa,QAAgBZ,IACtB,OAAOK,EAAIQ,IAAI,QAAS,CAAED,WAC5B,CajCIqM,GACGC,MAAM9L,GAAQyL,EAAUzL,EAAIL,QAC5BoM,OAAO9L,IACN/B,QAAQoE,MAAMrC,GACdsC,EAAAA,QAAMC,MAAM,eAAM,gEAEnBwJ,SAAQ,IAAML,GAAW,OAG9BxO,EAAAA,EAAAA,WAAUyO,EAAM,IAGhB,MAAMK,EAAgBtN,UACpB,IACE,MAAMuN,EAAW,6BbsGhBvN,gBAA0B,SAAEwN,EAAQ,MAAE3G,IAC3C,MAAMhG,QAAgBZ,IACtB,OAAOK,EAAI2C,KAAK,SAAU,CAAEuK,WAAU3G,SAAS,CAAEhG,WACnD,CarGY4M,CAAW,CACfD,SAAUE,EAAMF,SAChB3G,MAAO0G,IAITN,GACF,CAAE,MAAO3L,GACP/B,QAAQoE,MAAMrC,GACdsC,EAAAA,QAAMC,MAAM,eAAM,iCACpB,GAGF,OAAIkJ,GAAgBlO,EAAAA,EAAAA,KAAC8O,GAAAA,QAAiB,CAAC1J,MAAO,CAAEiC,UAAW,MAErC,IAAlB2G,EAAOjN,QAEPf,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,GAAO0J,eAC9B9I,QAASA,KAAQlD,EAAWyI,SAAS,cAAerM,UAIpDa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBL,MAAOC,GAAO2J,gBAOpBhP,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAC3B6O,EAAOiB,KAAKJ,IACX,MAAMK,EAAML,EAAMM,sBAIZC,EAAa,GAHT3K,OAAO4K,KAAKC,MAAMJ,EAAM,OAAOK,SAAS,EAAG,QAC3C9K,OAAO4K,KAAKC,MAAOJ,EAAM,KAAQ,KAAKK,SAAS,EAAG,QAClD9K,OAAOyK,EAAM,IAAIK,SAAS,EAAG,OAGvC,OAEErK,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAsBC,MAAOC,GAAOmK,aAAarQ,SAAA,EACpDa,EAAAA,EAAAA,KAACiM,GAAa,CACZC,QAAS2C,EAAMY,WACftD,KAAMiD,EACNhD,YAAaA,IAAMqC,EAAcI,KAElCA,EAAMa,MAAMT,KAAKU,IAChB3P,EAAAA,EAAAA,KAACqN,GAAQ,CAEPrF,MAAO2H,EAAK3H,MACZsF,aAAcqC,EAAKrC,aACnBC,cAAc,EACdC,YAAamC,EAAKC,YAJbD,EAAKE,SARLhB,EAAMF,cAoB3B,CAEA,MAAMtJ,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTuC,kBAAmB,GACnBa,WAAY,IAEd8G,aAAc,CACZjI,aAAc,IAEhBwH,eAAgB,CACdrI,WAAY,SACZgC,WAAY,IAEdoH,UAAW,CACTlJ,SAAU,GACVwB,MAAO,OACPb,aAAc,GACdc,UAAW,UAEb2G,WAAY,CACVlI,MAAO,IACPQ,OAAQ,IACRsB,WAAY,aCzHHvD,GAASmB,EAAAA,QAAW7E,OAAO,CACtC2D,UAAW,CAET6C,eAAgB,gBAChBQ,cAAe,MACfjC,WAAY,UAGdqJ,WAAY,CACVpH,cAAe,MACfjC,WAAY,UAEdsJ,OAAQ,CACNlJ,MAAO,GACPQ,OAAQ,GACRN,aAAe,GACfkE,SAAU,SACV/C,eAAgB,SAChBzB,WAAY,SACZU,YAAa,EACbD,YAAayF,IAEf1D,MAAO,CACLpC,MAAO,GACPQ,OAAQ,GACRsB,WAAY,SAEdqH,QAAS,CACPC,WAAY,IAEdpH,KAAM,CACJlC,SAAU,GACVuG,WAAYN,GACZzE,MAAO,OACPb,aAAc,GAEhB3B,OAAQ,CACNgB,SAAU,GACVuG,WAAYN,GACZzE,MAAO,QAGT+H,UAAW,CAEX,EACAC,SAAU,CACRzH,cAAe,MACfjC,WAAY,UAEd0G,MAAO,CACLtG,MAAO,GACPQ,OAAQ,IAEV+I,aAAc,CACZzJ,SAAU,GACVuG,WAAYN,GACZzE,MAAOwE,GACPsD,WAAY,KCJhB,GArDgBI,EAAGlL,QAAOmL,QAAQ,MAChC,MAAOvM,EAAMwM,IAAWlR,EAAAA,EAAAA,UAAS,CAAEwJ,KAAM,GAAIlD,OAAQ,KAmBnD,OAjBFjG,EAAAA,EAAAA,YAAU,KACSwB,WACf,IACE,MAAMgB,QAAaC,IACnBoO,EAAQ,CACN1H,KAAM3G,EAAKwC,UAAY,qBACvBiB,OAAQzD,EAAKyD,QAAU,6EACvBhB,cAAezC,EAAKyC,eAAiB,IAEzC,CAAE,MAAOE,GACPpE,QAAQoE,MAAM,mEAAkBA,EAClC,GAGF2L,KACC,KAGCvL,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOC,UAAWF,GAAOjG,SAAA,EACrC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO0K,WAAW5Q,SAAA,EAC7Ba,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAO2K,OAAO7Q,UACzBa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQxB,EAAKY,cACT,CAAEiG,IAAK,yBAAyB7G,EAAKY,iBACrCa,EAAQ,MACZL,MAAOC,GAAO6D,WAGlBhE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO4K,QAAQ9Q,SAAA,EAC1Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOyD,KAAK3J,SAAE6E,EAAK8E,QAChC9I,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOO,OAAOzG,SAAE6E,EAAK4B,gBAItCV,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO8K,UAAUhR,SAAA,EAC5B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAO+K,SAAU,CAAE7I,aAAc,IAAKpI,SAAA,EAClDa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAoBL,MAAOC,GAAOqL,QACzD1Q,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOgL,aAAalR,SAAC,UAEpC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO+K,SAASjR,SAAA,EAC3Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAqBL,MAAOC,GAAO+H,SAC1DpN,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOgL,aAAalR,SAAEoR,cCjC/C,SAASI,GAAiB5O,EAAO,IAAI6O,MAKnC,MAAO,GAHInM,OAAO1C,EAAK8O,WAAa,GAAGtB,SAAS,EAAG,cACxC9K,OAAO1C,EAAK+O,WAAWvB,SAAS,EAAG,eAF7B,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAG5BxN,EAAKgP,YAE3B,CAEe,SAASC,KACtB,MAAMC,GAASC,EAAAA,EAAAA,qBACTnO,GAAawF,EAAAA,EAAAA,kBAEZ4I,EAAoBC,IAAyB9R,EAAAA,EAAAA,UAAS,IACtD4O,EAASC,IAAc7O,EAAAA,EAAAA,WAAS,GAgCvC,OAhBAK,EAAAA,EAAAA,YAAU,KACR,WACE,IACE,MAAM0R,EARSC,MACnB,MAAMC,EAAI,IAAIX,KACd,MAAO,GAAGW,EAAEC,iBAAiB/M,OAAO8M,EAAEV,WAAa,GAAGtB,SAAS,EAAG,QAAQ9K,OAAO8M,EAAET,WAAWvB,SAAS,EAAG,QAMxF+B,GAERG,SADY3P,EAAqBuP,IACtBlP,KAAKuP,qBAAuB,EAC7CN,EAAsBK,EACxB,CAAE,MAAOhP,GACP/B,QAAQoE,MAAMrC,GACd2O,EAAsB,EACxB,CAAC,QACCjD,GAAW,EACb,CACD,EAZD,KAaC,KAGDjJ,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEqB,KAAM,EAAGE,gBAAiB,OAAQ+B,WAAYuI,EAAOxH,KAAMtK,SAAA,EACxE+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOoH,aAAatN,SAAA,EAE/Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOtD,KAAK5C,SAAEwR,QAC3B3Q,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACG,QAASA,IAAMlD,EAAWyI,SAAS,SAASrM,UAC5Da,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOzF,MAAMT,SACvB+O,EAAU,YApCDgB,EAoCyBiC,EAhCpC,CAHG9B,KAAKC,MAAMJ,EAAM,MACjBG,KAAKC,MAAOJ,EAAM,KAAQ,IAC1BA,EAAM,IACCD,KAAI0C,GAAKlN,OAAOkN,GAAGpC,SAAS,EAAG,OAAMqC,KAAK,cAqCzD1M,EAAAA,EAAAA,MAAC2M,EAAAA,QAAU,CAACC,sBAAuBzM,GAAO0M,KAAK5S,SAAA,EAC7Ca,EAAAA,EAAAA,KAACsQ,GAAO,KACRtQ,EAAAA,EAAAA,KAAC+N,GAAa,QAGhB/N,EAAAA,EAAAA,KAACoL,GAAS,OA9CM8D,KAiDtB,CAEA,MAAM7J,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B8K,aAAc,CACZ3F,MAAO,OACPQ,OAAQ,IACRX,gBAAiB,UACjBD,WAAY,SACZyB,eAAgB,UAElBpG,KAAM,CACJqG,MAAO,OACPxB,SAAU,GACVW,aAAc,GAEhB3H,MAAO,CACLwI,MAAO,OACPxB,SAAU,GACVM,WAAY,QAEd6K,KAAM,CACJhL,QAAS,M,0BCtFE,SAASiL,KACtB,MAAMjP,GAAawF,EAAAA,EAAAA,kBAEZnJ,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,GACjC2S,GAAWC,EAAAA,EAAAA,QAAO,OAEjBlE,EAAQC,IAAa3O,EAAAA,EAAAA,UAAS,KAC9B6S,EAAaC,IAAkB9S,EAAAA,EAAAA,UAAS,IAGzC+R,GAAQ,IAAIT,MAAOyB,cAAcC,MAAM,EAAG,KAGzCC,EAAYC,IAAiBlT,EAAAA,EAAAA,UAAS,IAG7CK,EAAAA,EAAAA,YAAU,KACR,IAAI+E,EAIJ,OAHItF,IACFsF,EAAK7E,aAAY,IAAML,GAAYM,GAASA,EAAO,KAAI,MAElD,IAAMC,cAAc2E,KAC1B,CAACtF,KAGJO,EAAAA,EAAAA,YAAU,KACR,WACE,IACE,MAAM0B,QAAcC,EAAYC,aAAa,eACvCkR,QAAenR,EAAYC,aAAa,UAC9C,IAAKF,IAAUoR,EAAQ,MAAM,IAAI5O,MAAM,gDAGvC,MAAQ1B,KAAMuQ,SAAqBjR,EAAIQ,IAAI,kBAAkBwQ,IAAU,CACrEzQ,QAAS,CAAER,cAAe,UAAUH,OAEtC4M,EAAUyE,GACV,MAAMC,EAAUD,EAAW,IAAI/D,UAAY,GAC3CyD,EAAeO,EACjB,CAAE,MAAOC,GACPlS,QAAQoE,MAAM8N,GACd7N,EAAAA,QAAMC,MAAM,eAAM,sDACpB,CACD,EAjBD,KAkBC,KAGHrF,EAAAA,EAAAA,YAAU,KACHwS,GACL,WACE,MAAM9Q,QAAcC,EAAYC,aAAa,eAG7C,IACE,MAAM,KAAEY,SAAeV,EAAIQ,IACzB,oBAAoBkQ,UAAoBd,IACxC,CAAErP,QAAS,CAAER,cAAe,UAAUH,QAElC,gBAAEwR,EAAe,WAAEC,EAAU,WAAEC,GAAe5Q,EAEpD,GAAI2Q,GAAcC,EAAY,CAC5B,MAAMC,EAAU,IAAIpC,KAAKmC,GAAYE,UAC/BC,EAAU7D,KAAKC,OAAOsB,KAAKuC,MAAQH,GAAW,KACpDxT,EAAWqT,EAAkBK,GAC7BjB,EAAS5G,QAAU2H,EACnB3T,GAAa,EACf,MACEG,EAAWqT,GAAmB,GAC9BZ,EAAS5G,QAAU,KACnBhM,GAAa,EAEjB,CAAE,MAAOoD,GACP/B,QAAQoE,MAAM,gDAAcrC,GAC5BsC,EAAAA,QAAMC,MAAM,eAAM,iGACpB,CAGA,IACE,MAAMxC,QAAYV,EAAqBuP,GACvCmB,EAAchQ,EAAIL,KAAKuP,qBAAuB,EAChD,CAAE,MAAOjP,GACP/B,QAAQoE,MAAM,mCAAgBrC,GAC9B+P,EAAc,EAChB,CACD,EAnCD,KAoCC,CAACL,IAsCJ,MAGMiB,EAAclE,IAClB,MAAMmE,EAAInE,GAAO,EAIjB,MAAO,GAHGzK,OAAO4K,KAAKC,MAAM+D,EAAI,OAAO9D,SAAS,EAAG,QACzC9K,OAAO4K,KAAKC,MAAO+D,EAAI,KAAQ,KAAK9D,SAAS,EAAG,QAC/C9K,OAAO4O,EAAI,IAAI9D,SAAS,EAAG,QAIxC,OACErK,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAE5Ba,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAOC,GAAOiO,YACdrN,QAASA,IAAMlD,EAAWyI,SAAS,QAAQrM,UAE3Ca,EAAAA,EAAAA,KAACuT,GAAAA,QAAQ,CAACzK,KAAK,QAAQ0K,KAAM,GAAIpL,MAAM,YAIzCpI,EAAAA,EAAAA,KAAC6R,EAAAA,QAAU,CACT4B,YAAU,EACVC,gCAAgC,EAChC5B,sBAAuBzM,GAAOsO,cAAcxU,SAE3C6O,EAAOiB,KAAK2E,IACX5T,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAEfV,MAAO,CACLC,GAAOwO,KACP1B,IAAgByB,EAAEjF,UAAYtJ,GAAOyO,YAEvC7N,QAASA,IAAMmM,EAAewB,EAAEjF,UAAUxP,UAE1Ca,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CACHP,MAAO,CACLC,GAAO0O,SACP5B,IAAgByB,EAAEjF,UAAYtJ,GAAO2O,gBACrC7U,SAEDyU,EAAE9K,QAbA8K,EAAEjF,eAoBb3O,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAO4O,aAAa9U,UAC/Ba,EAAAA,EAAAA,KAACkU,GAAAA,yBAAwB,CACvBV,KAAM,IACN1M,MAAO,GACPqN,KAAQ5U,EAAU,KAAQ,KAAQ,IAClC6U,UAAU,UACVzN,gBAAgB,UAChB0N,SAAU,EACVC,QAAQ,SAAQnV,SAEfA,KACC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOkP,iBAAiBpV,SAAA,EACnCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOmP,WAAWrV,SAAC,WAChCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOoP,WAAWtV,SAAEiU,EAAW7T,MAC5CS,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOqP,WAAWvV,SAAC,WAChCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOsP,UAAUxV,SAAEiU,EAAWb,aAOnDvS,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,GAAOuP,YAAa3O,QAvEhC4O,IAAOzV,EAjBxB+B,iBACE9B,GAAa,GACb,IACE,MAAMgC,QAAcC,EAAYC,aAAa,gBACvC,KAAEY,SAAeV,EAAI2C,KACzB,WAAW+N,SACX,CAAC,EACD,CAAEnQ,QAAS,CAAER,cAAe,UAAUH,OAExC7B,EAAW2C,EAAK0Q,iBAAmB,EACrC,CAAE,MAAOpQ,GACP/B,QAAQoE,MAAM,6BAAUrC,GACxBpD,GAAa,GACb0F,EAAAA,QAAMC,MAAM,eAAM,8EACpB,CACF,CAEoC8P,GAnCpC3T,iBACE9B,GAAa,GACb4S,EAAS5G,QAAUuF,KAAKuC,MACxB,IACE,MAAM9R,QAAcC,EAAYC,aAAa,qBACvCE,EAAI2C,KACR,WAAW+N,UACX,CAAC,EACD,CAAEnQ,QAAS,CAAER,cAAe,UAAUH,MAE1C,CAAE,MAAOoB,GACP/B,QAAQoE,MAAM,6BAAUrC,GACxBpD,GAAa,GACb0F,EAAAA,QAAMC,MAAM,eAAM,8EACpB,CACF,CAoBmD+P,GAuEgB5V,UAC7Da,EAAAA,EAAAA,KAACuT,GAAAA,QAAQ,CAACzK,KAAM1J,EAAY,QAAU,OAAQoU,KAAM,GAAIpL,MAAM,aAItE,CAEA,MAAM/C,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNE,gBAAiB,UACjB+B,WAAY,GAEZhC,WAAY,UAEd4M,YAAa,CAAE9J,SAAU,WAAYC,IAAK,GAAIC,KAAM,GAAIqC,OAAQ,IAChE4H,cAAe,CACbrM,OAAQ,GACRqB,cAAe,MACfd,kBAAmB,GACnBR,UAAW,GACXE,aAAc,GACd4D,UAAW,UAEb0I,KAAM,CACJ1M,YAAa,OACbC,YAAa,EACbS,kBAAmB,GACnBC,gBAAiB,EACjBd,aAAc,GACdgO,iBAAkB,GAEpBlB,WAAY,CAAEnN,gBAAiB,QAC/BoN,SAAU,CAAE3L,MAAO,OAAQxB,SAAU,IACrCoN,eAAgB,CAAE5L,MAAO,OAAQlB,WAAY,OAC7C+M,aAAc,CACZvN,WAAY,SACZyB,eAAgB,SAEhBZ,aAAc,IAEhBgN,iBAAkB,CAAE7N,WAAY,UAChC8N,WAAY,CAAEpM,MAAO,OAAQxB,SAAU,GAAIW,aAAc,GACzDkN,WAAY,CAAErM,MAAO,OAAQxB,SAAU,GAAIM,WAAY,OACvDwN,WAAY,CAAEtM,MAAO,UAAWf,UAAW,GAAIT,SAAU,IACzD+N,UAAW,CAAEvM,MAAO,UAAWxB,SAAU,IACzCgO,YAAa,CACXvN,UAAW,GACXV,gBAAiB,OACjBI,QAAS,GACTC,aAAc,GACdO,aAAc,MCjQLlC,GAASmB,EAAAA,QAAW7E,OAAO,CACtC2D,UAAW,CACTqB,gBAAiB,OACjBkB,kBAAmB,IAErBwJ,MAAO,CACLlJ,eAAgB,gBAChBQ,cAAe,MACfpB,aAAc,IAEhByB,KAAM,CACJpC,SAAU,GACVuG,WAAYN,IAEdoI,KAAM,CACJtM,cAAe,MACfR,eAAgB,iBAElB+M,IAAK,CACHvM,cAAe,MACfjC,WAAY,SACZU,YAAa,GACbD,YAAayF,GACb5F,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,IAEnBoB,MAAO,CACLpC,MAAO,GACPQ,OAAQ,GACRsB,WAAY,WAEduM,SAAU,CACRvO,SAAU,GACVuG,WAAYN,IAEduI,KAAM,CACJxO,SAAU,GACVuG,WAAYN,IAEdwI,UAAW,CACT1M,cAAe,MACfjC,WAAY,SACZoB,gBAAiB,GACjBwN,YAAa,IAEfC,MAAO,CACL3O,SAAU,GACVuG,WAAYN,GACZ2I,WAAY,GACZnN,UAAW,QAEboN,KAAM,CACJrO,YAAa,GACbD,YAAayF,GACbrD,eAAgB,MCvDPlE,GAASmB,EAAAA,QAAW7E,OAAO,CACtC2D,UAAW,CACTqD,cAAe,MACfoE,IAAK,EACLrE,WAAY,GACZ4M,YAAa,GACbtJ,cAAe,IAEjB0J,YAAa,CACX7N,kBAAmB,GACnBC,gBAAiB,GACjBd,aAAc,IAEhB2O,UAAW,CACT/O,SAAU,GACVwB,MAAO,UCaX,GA5BoBwN,EAAG5H,SAAQ6H,kBAAiBC,oBAE5C9V,EAAAA,EAAAA,KAAC6R,EAAAA,QAAU,CAAC4B,YAAU,EAACC,gCAAgC,EAAMvU,UAC3Da,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAC3B6O,EAAOiB,KAAIJ,IACV,MAAMkH,EAAalH,EAAMF,WAAakH,EACtC,OACE7V,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAEfG,QAASA,IAAM6P,EAAcjH,EAAMF,UACnCvJ,MAAO,CACLC,GAAOqQ,YACP,CACE/O,gBAAiBoP,EAAalH,EAAMzG,MAAQwE,KAE9CzN,UAEFa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAO,CAACC,GAAOsQ,UAAWI,GAAc,CAAE3N,MAAO,SAAUjJ,SAC9D0P,EAAM/F,QAVJ+F,EAAMF,iBCRZtJ,GAASmB,EAAAA,QAAW7E,OAAO,CACtCqL,IAAK,CACHrE,cAAe,MACfR,eAAgB,gBAChBN,kBAAmB,EACnB0B,eAAgB,IAElByM,OAAQ,CACNtP,WAAY,UAEduP,QAAS,CACPrP,SAAU,GACVuG,WAAYN,IAEdqJ,KAAM,CACJpP,MAAO,GACPQ,OAAQ,GACRiC,eAAgB,EAChBX,WAAY,WAEduN,SAAU,CACRvP,SAAU,GACVwB,MAAO,UCvBLgO,GAAU,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACzCC,GAAS,CAAC,UAAW,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,WAEpD,SAASC,KACtB,MAAMjF,EAAQ,IAAIT,KACZ2F,EAAWlF,EAAMN,SAGjByF,EAAc,IAAI5F,KAAKS,GAC7BmF,EAAYC,QAAQpF,EAAMP,UAAYyF,GAEtC,MAAMG,EAAYC,MAAMC,KAAK,CAAE7V,OAAQ,IAAK,CAAC8V,EAAGC,KAC9C,MAAMvF,EAAI,IAAIX,KAAK4F,GAEnB,OADAjF,EAAEkF,QAAQlF,EAAET,UAAYgG,GACjBvF,KAGT,OACEvR,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAO2H,IAAI7N,SACrBuX,EAAUzH,KAAI,CAAClN,EAAMgV,KACpB7R,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAWC,MAAOC,GAAO2Q,OAAO7W,SAAA,EACnCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAO,CAACC,GAAO4Q,QAAS,CAAE7N,MAAOiO,GAAOtU,EAAKgP,YAAa5R,SAC7DiX,GAAQrU,EAAKgP,aAEhB/Q,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBL,MAAOC,GAAO6Q,QAEhBlW,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO8Q,SAAShX,SAAE4C,EAAK+O,cAR3BiG,MAanB,C,eClCe,SAASC,KACtB,OACE9R,EAAAA,EAAAA,MAAC+R,GAAAA,QAAG,CAACnQ,MAAM,OAAOQ,OAAO,KAAInI,SAAA,EAC3Ba,EAAAA,EAAAA,KAACkX,GAAAA,KAAI,CAAA/X,UACH+F,EAAAA,EAAAA,MAACiS,GAAAA,eAAc,CACbzS,GAAG,SACH0S,GAAG,MAAMC,GAAG,MAAMC,EAAE,MACpBC,GAAG,MAAMC,GAAG,KAAIrY,SAAA,EAEhBa,EAAAA,EAAAA,KAACyX,GAAAA,KAAI,CAACC,OAAO,KAAKC,UAAU,OAAOC,YAAY,SAC/C5X,EAAAA,EAAAA,KAACyX,GAAAA,KAAI,CAACC,OAAO,OAAOC,UAAU,OAAOC,YAAY,YAIrD5X,EAAAA,EAAAA,KAAC6X,GAAAA,QAAO,CACNT,GAAG,MACHC,GAAG,IACHS,GAAG,MACHC,GAAG,KACH5D,KAAK,mBAIb,CCrBe,SAAS6D,IAAgB,KAAElP,EAAI,MAAEV,EAAK,MAAEc,IACrD,OACEhE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAO4S,cAAe,CAAE9Q,YAAaiB,IAASjJ,UAC1Da,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQ,CAAEqF,IAAK3B,GACf9D,MAAOC,GAAO6S,YAGlBlY,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOyD,KAAK3J,SAAE2J,MAGjC,CAEA,MAAMzD,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACToB,WAAY,SACZsO,iBAAkB,GAEpBiD,cAAe,CACbnR,MAAO,GACPQ,OAAQ,GACRN,aAAc,GACdI,YAAa,EACb8D,SAAU,UAEZgN,OAAQ,CACNpR,MAAO,GACPQ,OAAQ,GACRN,aAAc,GACdL,gBAAiB,WAEnBmC,KAAM,CACJzB,UAAW,EACXT,SAAU,GACVuG,WAAYN,GACZzE,MAAO,UCrCI,SAAS+P,IAAgB,QAAEC,IACxC,OACEpY,EAAAA,EAAAA,KAAC6R,EAAAA,QAAU,CAAC4B,YAAU,EAACC,gCAAgC,EAAOtO,MAAOC,GAAOgT,OAAOlZ,SAChFiZ,EAAQnJ,KAAKqJ,IACZtY,EAAAA,EAAAA,KAACgY,GAAe,CAEdlP,KAAMwP,EAAO3T,SACbyD,MAAOkQ,EAAOlQ,MACdc,MAAOoP,EAAOC,cAHTD,EAAOzI,QAQtB,CAEA,MAAMxK,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B0W,OAAQ,CACN/C,YAAa,MChBJjQ,GAASmB,EAAAA,QAAW7E,OAAO,CACtC2D,UAAW,CACTqD,cAAe,MACfjC,WAAY,SACZC,gBAAiB,UACjBkB,kBAAmB,GACnBC,gBAAiB,EACjBd,aAAc,IACdmE,UAAW,aACX5D,aAAc,GAEhBuB,KAAM,CACJlC,SAAU,GACVuG,WAAYN,GACZzE,MAAO,QAEToQ,SAAU,CACR1R,MAAO,GACPQ,OAAQ,GACRsB,WAAY,UACZsH,WAAY,KCrBD,SAASuI,IAAQ,KAAE3P,EAAI,SAAE4P,GAAW,IACjD,OACExT,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CACTC,GAAOC,WACPnG,SAAA,EACFa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOyD,KAAK3J,SAAE2J,IAC1B4P,IACC1Y,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQC,EAAQ,MAChBL,MAAOC,GAAOmT,aAKxB,CCFe,SAASG,KACtB,MAAMlG,OAAMmG,EACN7V,GAAawF,EAAAA,EAAAA,kBACZyF,EAAQC,IAAa3O,EAAAA,EAAAA,UAAS,KAC9BuW,EAAiBgD,IAAsBvZ,EAAAA,EAAAA,UAAS,OAEvDK,EAAAA,EAAAA,YAAU,KACWwB,WACjB,IACE,MAAMgB,QAAaD,IACnB+L,EAAU9L,GAGNA,EAAKpB,OAAS,GAChB8X,EAAmB1W,EAAK,GAAGwM,SAE/B,CAAE,MAAO7J,GACwB,MAA3BA,EAAMxC,UAAUI,QAClBhC,QAAQoY,KAAK,qGACb7K,EAAU,KAEVvN,QAAQoE,MAAM,6DAAiBA,EAEnC,GAGFiU,KACC,IAEH,MAAOC,EAAaC,IAAkB3Z,EAAAA,EAAAA,UAAS,MACzC4Z,EAAaF,GAAaZ,SAASe,MAAKC,GAAKA,EAAEvJ,MAAQ4C,KAAS9N,UAAY,UAGlFhF,EAAAA,EAAAA,YAAU,KACgBwB,WACtB,GAAK0U,EAAL,CACAnV,QAAQC,IAAI,4CAAoBkV,GAChC,IACE,MAAM1T,Q5BkDPhB,eAAgCkY,GACrC,MAAMrX,QAAgBZ,IAEtB,aADkBK,EAAIQ,IAAI,UAAUoX,IAAW,CAAErX,aACtCG,IACb,C4BtD2BmX,CAAiBzD,GACpCnV,QAAQC,IAAI,yCAAsBwB,GAClC8W,EAAe9W,EACjB,CAAE,MAAO2C,GACPpE,QAAQoE,MAAM,uFAAuBA,EACvC,CAR4B,GAW9ByU,KACC,CAAC1D,IAEJ,MAAOnG,EAAO8J,IAAYla,EAAAA,EAAAA,UAAS,KAEnCK,EAAAA,EAAAA,YAAU,KACUwB,WAChB,GAAK0U,EAEL,IACE,MAAMrT,Q5BsCPrB,eAAiCkY,GACtC,MAAMrX,QAAgBZ,IAEtB,aADkBK,EAAIQ,IAAI,gBAAgBoX,IAAW,CAAErX,aAC5CG,IACb,C4B1C0BsX,CAAkB5D,GACpC2D,EAAShX,EAAIL,KACf,CAAE,MAAO2C,GACPpE,QAAQoE,MAAM,sDAAeA,EAC/B,GAGF4U,KACC,CAAC7D,IAEJ,MAAM8D,EAAUjK,EAAMkK,QAAOjK,GAAQA,EAAKkK,UAAYpH,IAChDqH,EAAgB,CAAC,EAEvBpK,EAAMqK,SAAQpK,IACRA,EAAKkK,UAAYpH,IACdqH,EAAcnK,EAAKkK,WACtBC,EAAcnK,EAAKkK,SAAW,CAC5BA,QAASlK,EAAKkK,QACdlV,SAAUgL,EAAK3L,MAAMW,UAAY,4BACjCyD,MAAOuH,EAAKC,WACZF,MAAO,KAGXoK,EAAcnK,EAAKkK,SAASnK,MAAMsK,KAAKrK,OAI3C,MAAMsK,EAAeC,OAAOC,OAAOL,IAE5B3G,IAAO7T,EAAAA,EAAAA,UAAS,IAAIsR,MAErBwJ,EAAgB,GAAGjH,EAAI3B,uBAAkB2B,EAAItC,WAAa,WAAMsC,EAAIrC,oBAD7D,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACkDqC,EAAIpC,aAElG,OACE7L,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEqB,KAAM,EAAGE,gBAAiB,QAASxH,SAAA,EAChD+F,EAAAA,EAAAA,MAAC2M,EAAAA,QAAU,CAACzM,MAAO,CAAEuB,gBAAiB,QAASxH,SAAA,EAC7Ca,EAAAA,EAAAA,KAAC4V,GAAW,CACV5H,OAAQA,EACR6H,gBAAiBA,EACjBC,cAAe+C,KAEjB3T,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOgM,MAAMlS,SAAA,EACxBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2D,KAAK7J,SAAEib,KAC3Bpa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2D,KAAK7J,SAAC,iBAE5Ba,EAAAA,EAAAA,KAACsW,GAAW,KACZtW,EAAAA,EAAAA,KAACqa,GAAY,KACbnV,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO4P,KAAK9V,SAAA,EACvB+F,EAAAA,EAAAA,MAACY,EAAAA,QAAgB,CACfV,MAAO,CAACC,GAAO6P,IAAK,CAAEnI,IAAK,IAC3B9G,QAASA,IAAMlD,EAAWyI,SAAS,QAAQrM,SAAA,EAE3Ca,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAoBL,MAAOC,GAAO6D,SACzDlJ,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO8P,SAAShW,SAAC,sDAEhC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAO6P,IAAK,CAAEnI,IAAK,KAAM5N,SAAA,EACrCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAAAxG,SAAC,8BACNa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO+P,KAAKjW,SACtB6Z,GAAasB,aAAe,wCAKrCpV,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOgQ,UAAUlW,SAAA,EAC5B+F,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAOC,GAAOkQ,MAAMpW,SAAA,CACvB6Z,GAAauB,kBAAoB,EAAE,yCAAS,KAAK,6CAEpDva,EAAAA,EAAAA,KAACmY,GAAe,CAACC,QAASY,GAAaZ,SAAW,SAEpDlT,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACyY,GAAO,CAAC3P,KAAMoQ,IACdS,EAAQ1K,KAAIU,IACX3P,EAAAA,EAAAA,KAACqN,GAAQ,CAEPrF,MAAO2H,EAAK3H,MACZsF,aAAcqC,EAAKrC,aACnBE,YAAamC,EAAKC,YAHbD,EAAKE,QAOd7P,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOoQ,OAEnBwE,EAAahL,KAAIqJ,IAChBpT,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAAhG,SAAA,EACHa,EAAAA,EAAAA,KAACyY,GAAO,CAAC3P,KAAMwP,EAAO3T,SAAU+T,UAAU,IACzCJ,EAAO5I,MAAMT,KAAIU,IAChB3P,EAAAA,EAAAA,KAACqN,GAAQ,CAEPrF,MAAO2H,EAAK3H,MACZsF,aAAcqC,EAAKrC,aACnBE,YAAa8K,EAAOlQ,OAHfuH,EAAKE,SAJLyI,EAAOuB,kBAcxB7Z,EAAAA,EAAAA,KAACoL,GAAS,MAGhB,CCxKO,MAAM/F,GAASmB,EAAAA,QAAW7E,OAAO,CACtC2D,UAAW,CACTuC,kBAAmB,IAErB2S,KAAM,CACJ7T,gBAAiBiG,GACjBtF,OAAQ,IACR4D,SAAU,UAEZuP,OAAQ,CACN9R,cAAe,MACfjC,WAAY,UAEdgU,MAAO,CACL5T,MAAO,GACPQ,OAAQ,GACRsB,WAAY,WAEd+R,KAAM,CACJnR,SAAU,WACVE,KAAM,OAERkR,QAAS,CACP9T,MAAO,IACP8B,WAAY,WAGdiS,eAAgB,CACdrR,SAAU,WACV9C,WAAY,UAEdoU,MAAO,CACLC,QAAS,IACTrR,MAAO,GACPqC,OAAQ,GAEViP,OAAQ,CACND,QAAS,IACTE,MAAO,IAETC,MAAO,CACLH,QAAS,IACTrR,KAAM,IAGRyR,UAAW,CACTxU,gBAAiB,OAEjBK,aAAc,GACdE,WAAY,OAEdkU,QAAS,CACP1R,MAAO,EACP9C,SAAU,GACVW,aAAc,GACdM,kBAAmB,GACnBC,gBAAiB,GAEnBnC,KAAM,CACJiB,SAAU,GACVW,aAAc,GACdM,kBAAmB,EACnBC,gBAAiB,GAEnBuT,QAAS,CACPJ,MAAO,MAETK,UAAW,CACT5R,KAAM,MAER6R,UAAW,CACTjU,OAAQ,IACRsB,WAAY,WAEd4S,IAAK,CACHlU,OAAQ,IACRsB,WAAY,WAGd6S,OAAQ,CACN9S,cAAe,MACfoE,IAAK,GACL1F,UAAW,IAEbqU,UAAW,CACTvO,WAAYN,GACZzE,MAAOwE,IAET+O,YAAa,CACXxO,WAAYN,GACZzE,MAAOwE,IAETgP,UAAW,CACThV,SAAU,GACV2C,eAAgB,GAElBsS,UAAW,CACTxU,UAAW,EACXC,OAAQ,EACRR,MAAO,GACPH,gBAAiBiG,IAGnBkP,SAAU,CACRzU,UAAW,IAEb0U,SAAU,CACRpT,cAAe,MACfjC,WAAY,SACZa,aAAc,IAEhByU,QAAS,CACPlV,MAAO,GACPuB,UAAW,SACXzB,SAAU,GACVuG,WAAYN,GACZzE,MAAOwE,IAETgP,UAAW,CACT9U,MAAO,IACPuB,UAAW,OACXzB,SAAU,GACVwB,MAAOwE,GACP0I,YAAa,IAEf2G,WAAY,CACVnV,MAAO,GACP8B,WAAY,WAEdsT,eAAgB,CACdpV,MAAO,GACPuB,UAAW,SACXzB,SAAU,GACVuG,WAAYN,GACZzE,MAAOwE,MCpII,SAASuP,KACtB,MAAMpZ,GAAawF,EAAAA,EAAAA,kBACZ6T,EAASC,IAAc/c,EAAAA,EAAAA,WAAS,IAChCgd,EAAYC,IAAiBjd,EAAAA,EAAAA,UAAS,KACtCkd,EAAWC,IAAgBnd,EAAAA,EAAAA,UAAS,KACpCod,EAAUC,IAAerd,EAAAA,EAAAA,UAAS,KAEzCK,EAAAA,EAAAA,YAAU,KACSwB,WACf,IACE,MACMyb,S9BmGPzb,iBACL,MAAMa,QAAgBZ,IAEtB,aADkBK,EAAIQ,IAAI,iBAAkB,CAAED,aACnCG,IACb,C8BxG0B0a,IACM5N,KAAI,CAACJ,EAAOkI,IAAGmD,OAAA4C,OAAA,GAClCjO,EAAM,CACT2L,KAAMzD,EAAM,MAERgG,Q9BsGP5b,eAAoCsR,GACzC,MAAMzQ,QAAgBZ,IAKtB,aAJkBK,EAAIQ,IAAI,sBAAuB,CAC/C+a,OAAQ,CAAEnD,QAASpH,GACnBzQ,aAESG,IACb,C8B7G2B8a,GAEnBR,EAAaG,GACbD,EAAYI,GACZR,EAAcK,EAAYtK,MAAM,EAAG,GACrC,CAAE,MAAOM,GACPlS,QAAQoE,MAAM,gDAAc8N,EAC9B,GAEFsK,KACC,IAEH,MAAMC,EAAmBT,EAASzN,KAAImO,IACpC,MAAMC,EAAQb,EAAUrD,MAAKvF,GAAKA,EAAEjF,UAAYyO,EAAQzO,WACxD,OAAAuL,OAAA4C,OAAA,GACKM,EAAQ,CACX5C,KAAM6C,GAAO7C,MAAQ,UAInB8C,EAAgBlB,EAAUI,EAAYW,EAE5C,OACEjY,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEqB,KAAM,EAAGE,gBAAiB,QAASxH,SAAA,EAChD+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOC,UAAWD,GAAOmV,KAAM,CAC3C9R,WAAY,KACXvJ,SAAA,EACD+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOoV,OAAOtb,SAAA,EACzBa,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACG,QAASA,IAAMlD,EAAWyF,SAASrJ,UACnDa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAwBL,MAAOC,GAAOqV,WAE/D1a,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOsV,KAAKxb,UACvBa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAuBL,MAAOC,GAAOuV,eAG/D0B,EAAW,KACVpX,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOwV,eAAgBxV,GAAOyV,OAAO3b,SAAA,EACjD+F,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAO,CAACC,GAAO8V,UAAW9V,GAAO+V,SAASjc,SAAA,CAAC,gBAC3Cmd,EAAW,GAAG7M,eAEpBzP,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAqBL,MAAO,CAACC,GAAOkW,UAAWlW,GAAOmW,UAKhFc,EAAW,KACVpX,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOwV,eAAgBxV,GAAO2V,QAAQ7b,SAAA,EAClD+F,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAO,CAACC,GAAO8V,UAAW9V,GAAOgW,QAAShW,GAAOM,MAAMxG,SAAA,CAAC,gBACxDmd,EAAW,GAAG7M,eAEpBzP,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,KAAqBL,MAAOC,GAAOkW,eAK7De,EAAW,KACVpX,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOwV,eAAgBxV,GAAO6V,OAAO/b,SAAA,EACjD+F,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAO,CAACC,GAAO8V,UAAW9V,GAAOiW,UAAWjW,GAAOM,MAAMxG,SAAA,CAAC,gBAC1Dmd,EAAW,GAAG7M,eAEpBzP,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAqBL,MAAOC,GAAOkW,mBAMhErW,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOC,UAAWD,GAAOoW,QAAQtc,SAAA,EAC7C+F,EAAAA,EAAAA,MAAC2I,GAAAA,QAAS,CAAC5H,QAASA,IAAMoW,GAAW,GAAMld,SAAA,EACzCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOgX,EAAU/W,GAAOqW,UAAYrW,GAAOsW,YAAYxc,SAAC,6BAC7Did,IAAWpc,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOwW,gBAElC3W,EAAAA,EAAAA,MAAC2I,GAAAA,QAAS,CAAC5H,QAASA,IAAMoW,GAAW,GAAOld,SAAA,EAC1Ca,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAQgX,EAA6B/W,GAAOsW,YAA1BtW,GAAOqW,UAA+Bvc,SAAC,+BAC7Did,IAAWpc,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOwW,mBAIrC7b,EAAAA,EAAAA,KAAC6R,EAAAA,QAAU,CAACzM,MAAO,CAACC,GAAOC,UAAWD,GAAOyW,UAAU3c,SACpDme,EAAcrO,KAAKJ,IAClB3J,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAsBC,MAAOC,GAAO0W,SAAS5c,SAAA,EAChDa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2W,QAAQ7c,SAAE0P,EAAM2L,MAAQ,OAC5Cxa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOuW,UAAUzc,SAAE0P,EAAMY,cACtCzP,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAoBL,MAAOC,GAAO4W,cACzDjc,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO6W,eAAe/c,SAAE0P,EAAM0L,qBAJlC1L,EAAMF,eASrB3O,EAAAA,EAAAA,KAACoL,GAAS,MAGhB,CCzGe,SAASmS,KACtB,MAAOzU,EAAMC,IAAWzJ,EAAAA,EAAAA,UAAS,KAC1B4D,EAAWC,IAAgB7D,EAAAA,EAAAA,WAAS,GACrCyD,GAAawF,EAAAA,EAAAA,iBAMnB,OACErD,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAC,4CAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO4D,MAAM9J,SAAC,qEAC3Ba,EAAAA,EAAAA,KAACwH,EAAU,CACTtH,MAAO4I,EACPrB,aAAcsB,EACdrB,YAAY,iDAEd1H,EAAAA,EAAAA,KAAC+H,EAAU,CACTC,MAAO9E,EAAY,yBAAY,4BAC/BkD,UAAW0C,GAAQ5F,EACnB+C,QAjBauX,KACjBza,EAAWyI,SAAS,aAAc,CAAE1C,UAiBhC1D,MAAOC,GAAOiE,QAItB,CAEA,MAAMjE,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNM,QAAS,GACTJ,gBAAiB,QAEnBqB,MAAO,CACLuB,eAAgB,GAChB3C,SAAU,GACVuG,WAAYN,GACZzE,MAAO,WAETa,MAAO,CACLrC,SAAU,GACVuG,WAAYN,GACZtF,aAAc,IAEhB+B,IAAK,CAAEjC,UAAW,OClDL,SAASoW,IAAY,OAAEpH,EAAM,cAAEqH,EAAa,SAAEC,IAC3D,OACE3d,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAC3BkX,EAAOpH,KAAI,CAAC7G,EAAO2O,KAClB/W,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAEfV,MAAO,CAACC,GAAOuY,YAAa,CAAEjX,gBAAiByB,IAC/CnC,QAASA,IAAM0X,EAASvV,GAAOjJ,SAE9Bue,IAAkBtV,IACjBpI,EAAAA,EAAAA,KAAC8N,GAAS,CAAChH,MAAO,GAAIQ,OAAQ,MAL3ByP,MAWf,CAEA,MAAM1R,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTqD,cAAe,MACfkV,SAAU,OACV1V,eAAgB,SAChB4E,IAAK,IAEP6Q,YAAa,CACX9W,MAAO,GACPQ,OAAQ,GACRN,aAAc,GACdN,WAAY,SACZyB,eAAgB,YCxBd2V,GAAe,CACnB,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAGpB,SAASC,KACtB,MAAMhb,GAAawF,EAAAA,EAAAA,iBACbyV,GAAQ1S,EAAAA,EAAAA,aACNxC,KAAMqS,GAAc6C,EAAMhB,QAE3BU,EAAeO,IAAoB3e,EAAAA,EAAAA,UAAS,OAC5C4D,EAAWC,IAAgB7D,EAAAA,EAAAA,WAAS,GAErCke,EAAarc,UACjB,UjCwDGA,gBAAyB,KAAE2H,EAAI,MAAEV,IACtC1H,QAAQC,IAAI,iCAASmI,EAAMV,GAC3B,MAAMpG,QAAgBZ,IACtB,OAAOK,EAAI2C,KAAK,SAAU,CAAE0E,OAAMV,SAAS,CACzCpG,WAEJ,CiC7DYkc,CAAU,CAAEpV,KAAMqS,EAAW/S,MAAOsV,IAC1C3a,EAAWyI,SAAS,QACtB,CAAE,MAAO/I,GACP/B,QAAQC,IAAI,6CAAgB8B,EAC9B,GAIF,OACEyC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAC,4CAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO4D,MAAM9J,SAAC,2EAE3Ba,EAAAA,EAAAA,KAACyd,GAAW,CACVpH,OAAQyH,GACRJ,cAAeA,EACfC,SAAUM,KAEZje,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAO,CAACC,GAAO4C,QAASyV,GAAiBrY,GAAO8Y,gBAChD/X,UAAWsX,EACXzX,QAASuX,KAIXxd,EAAAA,EAAAA,KAAC+H,EAAU,CACTC,MAAO9E,EAAY,yBAAY,4BAC/BkD,UAAW+U,GAAajY,EACxB+C,QAASuX,EACTpY,MAAOC,GAAOiE,QAItB,CAEA,MAAMjE,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNM,QAAS,GACTJ,gBAAiB,QAEnBqB,MAAO,CACLuB,eAAgB,GAChB3C,SAAU,GACVuG,WAAYN,GACZzE,MAAO,WAETa,MAAO,CACLrC,SAAU,GACVuG,WAAYN,GACZtF,aAAc,IAEhB+B,IAAK,CAAEjC,UAAW,OCtEd+W,GACE,kCADFA,GAEE,SAFFA,GAGG,UAGM,SAASC,KACtB,MAAMtb,GAAawF,EAAAA,EAAAA,kBACZmV,EAAeO,IAAoB3e,EAAAA,EAAAA,UAAS,MAEnD,OACE4F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAC,4CAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO4D,MAAM9J,SAAC,+DAE3B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,SAASnf,SAAA,EAC3Ba,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOkZ,MAAO,CAAE5X,gBAAiByX,KAAmBjf,UAChEa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO8V,UAAUhc,SAAEif,QAElClZ,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO+P,KAAKjW,SAAA,EACvBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOmZ,SAASrf,SAAC,8BAC9Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOoZ,UAAUtf,SAAEif,YAIpCpe,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAA4BL,MAAOC,GAAOqZ,QAASzY,QAASA,IAAMlD,EAAWyI,SAAS,WAC7GxL,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,GAAOiE,IAAInK,UAClCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOsZ,QAAQxf,SAAC,6CAE/Ba,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,GAAOuZ,MAAO3Y,QAASA,IAAMlD,EAAWyI,SAAS,aAAarM,UACrFa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOwZ,UAAU1f,SAAC,oFAIvC,CAEA,MAAMkG,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNM,QAAS,GACTJ,gBAAiB,QAEnBqB,MAAO,CACLuB,eAAgB,GAChB3C,SAAU,GACVuG,WAAYN,GACZzE,MAAO,WAETa,MAAO,CACLrC,SAAU,GACVuG,WAAYN,GACZtF,aAAc,IAGhB+W,SAAU,CACR3X,gBAAiB,OACjBG,MAAO,IACPQ,OAAQ,IACRF,YAAa,GACbJ,aAAc,EACdG,YAAayF,GACbjB,YAAa,OACbE,cAAe,IACfC,aAAc,EACdpF,WAAY,SACZyB,eAAgB,UAElBoW,MAAO,CACLvX,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,GAEnBqT,UAAW,CACT/S,MAAO,OACPxB,SAAU,KACVuG,WAAYN,IAEduI,KAAM,CACJzM,cAAe,MACftB,UAAW,GACX0F,IAAK,GACLrG,WAAY,UAEd8X,SAAU,CACR5X,SAAU,GACVuG,WAAYN,IAEd4R,UAAW,CACT7X,SAAU,GACVuG,WAAYN,IAGd6R,QAAS,CACP5X,MAAO,IACPQ,OAAQ,IACRsB,WAAY,UACZvB,UAAW,IAGbiC,IAAK,CACHxC,MAAO,IACPQ,OAAQ,GACRN,aAAc,GACdL,gBAAiBiG,GACjBlG,WAAY,SACZyB,eAAgB,UAElBwW,QAAS,CACPtW,UAAW,SACXzB,SAAU,GACVuG,WAAYN,GACZzE,MAAO,QAETwW,MAAO,CACLlY,WAAY,SACZyB,eAAgB,SAChBd,UAAW,IAEbwX,UAAW,CACTjY,SAAU,GACVuG,WAAYN,GACZzE,MAAOwE,MC5HI,SAASkS,KACtB,MAAOhW,EAAMC,IAAWzJ,EAAAA,EAAAA,UAAS,IAEjC,OACE4F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAC,kDAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO4D,MAAM9J,SAAC,kHAC3Ba,EAAAA,EAAAA,KAACwH,EAAU,CACTtH,MAAO4I,EACPrB,aAAcsB,EACdrB,YAAY,kDAIpB,CAEA,MAAMrC,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNM,QAAS,GACTJ,gBAAiB,QAEnBqB,MAAO,CACLuB,eAAgB,GAChB3C,SAAU,GACVuG,WAAYN,GACZzE,MAAO,WAETa,MAAO,CACLrC,SAAU,GACVuG,WAAYN,GACZtF,aAAc,MC7BZ6W,GACE,kCADFA,GAEE,SAFFA,GAGG,UAGM,SAASW,KACtB,MAAMhc,GAAawF,EAAAA,EAAAA,kBACZmV,EAAeO,IAAoB3e,EAAAA,EAAAA,UAAS,MAEnD,OACE4F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOC,UAAUnG,SAAA,EAC5Ba,EAAAA,EAAAA,KAACsI,EAAM,KACPtI,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAC,kDAC3Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO4D,MAAM9J,SAAC,2EAE3B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOiZ,SAASnf,SAAA,EAC3Ba,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOkZ,MAAO,CAAE5X,gBAAiByX,KAAmBjf,UAChEa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO8V,UAAUhc,SAAEif,QAElClZ,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO+P,KAAKjW,SAAA,EACvBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOmZ,SAASrf,SAAC,8BAC9Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOoZ,UAAUtf,SAAEif,SAElCpe,EAAAA,EAAAA,KAACmY,GAAe,QAGlBnY,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,GAAOiE,IAAKrD,QAASA,IAAMlD,EAAWyI,SAAS,SAASrM,UAC/Ea,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOsZ,QAAQxf,SAAC,6CAE/Ba,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACV,MAAOC,GAAOuZ,MAAO3Y,QAASA,IAAMlD,EAAWyI,SAAS,cAAcrM,UACtFa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOwZ,UAAU1f,SAAC,8EAIvC,CAEA,MAAMkG,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B2D,UAAW,CACTmB,KAAM,EACNM,QAAS,GACTJ,gBAAiB,QAEnBqB,MAAO,CACLuB,eAAgB,GAChB3C,SAAU,GACVuG,WAAYN,GACZzE,MAAO,WAETa,MAAO,CACLrC,SAAU,GACVuG,WAAYN,GACZtF,aAAc,IAGhB+W,SAAU,CACR3X,gBAAiB,OACjBG,MAAO,IACPQ,OAAQ,IACRF,YAAa,GACbJ,aAAc,EACdG,YAAayF,GACbjB,YAAa,OACbE,cAAe,IACfC,aAAc,EACdpF,WAAY,SACZyB,eAAgB,UAElBoW,MAAO,CACLvX,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,GAEnBqT,UAAW,CACT/S,MAAO,OACPxB,SAAU,KACVuG,WAAYN,IAEduI,KAAM,CACJzM,cAAe,MACftB,UAAW,GACX0F,IAAK,GACLrG,WAAY,UAEd8X,SAAU,CACR5X,SAAU,GACVuG,WAAYN,IAEd4R,UAAW,CACT7X,SAAU,GACVuG,WAAYN,IAGdvD,IAAK,CACHxC,MAAO,IACPQ,OAAQ,GACRN,aAAc,GACdL,gBAAiBiG,GACjBlG,WAAY,SACZyB,eAAgB,SAChBd,UAAW,IAEbsX,QAAS,CACPtW,UAAW,SACXzB,SAAU,GACVuG,WAAYN,GACZzE,MAAO,QAETwW,MAAO,CACLlY,WAAY,SACZyB,eAAgB,SAChBd,UAAW,IAEbwX,UAAW,CACTjY,SAAU,GACVuG,WAAYN,GACZzE,MAAOwE,M,0BC1HJ,MAAMvH,GAASmB,EAAAA,QAAW7E,OAAO,CACtCqd,QAAS,CACPxV,SAAU,WACVC,IAAK,GACLC,KAAM,EACNuR,MAAO,EACPvU,WAAY,SACZqF,OAAQ,GAEVkT,KAAM,CACJnY,MAAO,IACPQ,OAAQ,IACRsB,WAAY,WAGdmH,WAAY,CACVpH,cAAe,MACfjC,WAAY,SACZW,UAAW,IACX6I,WAAY,GAEdF,OAAQ,CACNlJ,MAAO,GACPQ,OAAQ,GACRN,aAAc,GACdkE,SAAU,SACV/C,eAAgB,SAChBzB,WAAY,SACZU,YAAa,EACbD,YAAayF,IAEf1D,MAAO,CACLpC,MAAO,GACPQ,OAAQ,GACRsB,WAAY,SAEdqH,QAAS,CACPC,WAAY,IAEdpH,KAAM,CACJlC,SAAU,GACVuG,WAAYN,GACZtF,aAAc,GAEhB3B,OAAQ,CACNgB,SAAU,GACVuG,WAAYN,IAGdqS,YAAa,CACXvW,cAAe,MACfR,eAAgB,gBAChBd,UAAW,GACX0E,OAAQ,GAEVoE,UAAW,CACTxH,cAAe,MACfjC,WAAY,SAEZU,YAAa,GACbD,YAAayF,GACb5F,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,GAEjBiF,IAAK,EACLpG,gBAAiB,QAEnBwY,YAAa,CACX7X,OAAQ,GACRsB,WAAY,WAEdyH,aAAc,CACZzJ,SAAU,GACVuG,WAAYN,IAGdG,IAAK,CACHrE,cAAe,MACfjC,WAAY,SACZqG,IAAK,GAEPqS,aAAc,CACZzW,cAAe,MACfkV,SAAU,OACV9Q,IAAK,GAEPsS,IAAK,CACHxX,kBAAmB,GACnBC,gBAAiB,EACjBnB,gBAAiB,UACjBK,aAAc,KACdJ,SAAU,IAGZ0Y,eAAgB,CACd7Y,KAAM,EACN0B,eAAgB,SAChBzB,WAAY,SACZC,gBAAiB,mBAEnB4Y,MAAO,CACLzY,MAAO,IACPH,gBAAiB,OACjBS,YAAa,GACbD,YAAayF,GACb5F,aAAc,GACda,kBAAmB,GACnBC,gBAAiB,IAEnB0X,UAAW,CACTjY,aAAc,GAEhBK,MAAO,CACLR,YAAa,EACbD,YAAa,OACbH,aAAc,EACdD,QAAS,GACTQ,aAAc,IAGhBkY,QAAS,CACP9W,cAAe,MACfoE,IAAK,GAEP2S,QAAS,CACP/W,cAAe,MACfjC,WAAY,SACZyB,eAAgB,gBAChBZ,aAAc,GAGhBoY,aAAc,CACZhX,cAAe,MACfjC,WAAY,SACZqG,IAAK,EACL1F,UAAW,IAGbuY,UAAW,CACTnZ,KAAM,EACNW,YAAa,EACbD,YAAa,OACbH,aAAc,EACdD,QAAS,GAGX8Y,WAAY,CACVlZ,gBAAiB,QACjBmZ,oBAAqB,GACrBC,qBAAsB,GACtBlY,kBAAmB,GACnBa,WAAY,GACZsD,cAAe,GACflF,MAAO,OACP0C,SAAU,WACVuR,OAAQ,GAEViF,iBAAkB,CAChBrX,cAAe,MACfR,eAAgB,gBAChBzB,WAAY,SACZa,aAAc,IAEhBiY,UAAW,CACT5Y,SAAU,GACVuG,WAAYN,IAEdoT,aAAc,CACZrZ,SAAU,IAEZ2O,MAAO,CACL3O,SAAU,GACVuG,WAAYN,IAEdqT,eAAgB,CACdvZ,gBAAiBiG,GACjB5F,aAAc,GACdN,WAAY,SACZoB,gBAAiB,GACjBP,aAAc,IAEhB4Y,mBAAoB,CAClB/X,MAAO,OACP+E,WAAYN,GACZjG,SAAU,IAEZwZ,aAAc,CACZzZ,gBAAiBiG,GACjB9E,gBAAiB,GACjBd,aAAc,GACdN,WAAY,SACZa,aAAc,IAEhB8Y,iBAAkB,CAChBjY,MAAO,UACPxB,SAAU,GACVuG,WAAYN,MCtMD,SAASyT,IAAoB,SAAEnhB,EAAQ,UAAEohB,GAAY,IAClE,OACEvgB,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOmb,OAAQD,GAAalb,GAAOkb,WAAWphB,SACzDA,GAGP,CAEA,MAAMkG,GAASmB,EAAAA,QAAW7E,OAAO,CAC/B6e,OAAQ,CACN/Z,KAAM,EACNE,gBAAiB,OACjB+B,WAAY,GACZb,kBAAmB,MCZVxC,GAASmB,EAAAA,QAAW7E,OAAO,CACtC8e,KAAM,CACJrZ,YAAa,GACbD,YAAayF,GACb5F,aAAc,GACdK,UAAW,IAEbqZ,OAAQ,CACN/Z,gBAAiBiG,GACjBjE,cAAe,MACfR,eAAgB,gBAChB2X,oBAAqB,GACrBC,qBAAsB,GACtBjY,gBAAiB,GACjBD,kBAAmB,IAErBG,MAAO,CACLI,MAAO,OACPxB,SAAU,GACVuG,WAAYN,IAEd8T,QAAS,CACP7Y,gBAAiB,GACjBD,kBAAmB,GACnBkF,IAAK,MCRT,GAhBiB6T,EAAG5Y,QAAOyD,OAAMoV,cAAa1hB,WAAU2hB,mBAEpD5b,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOob,KAAKthB,SAAA,EACvB+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOqb,OAAOvhB,SAAA,EACzBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO2C,MAAM7I,SAAE6I,KAC5BhI,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CAACG,QAAS4a,EAAY1hB,SACpCsM,QAGLzL,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAO,CAACC,GAAOsb,QAASG,GAAc3hB,SACzCA,O,uUCDM,SAAS4hB,KACtB,MAAMhe,GAAawF,EAAAA,EAAAA,kBACZO,EAAMC,IAAWzJ,EAAAA,EAAAA,UAAS,KAC1BsG,EAAQob,IAAa1hB,EAAAA,EAAAA,UAAS,KAC9BiZ,EAAc0I,IAAmB3hB,EAAAA,EAAAA,UAAS,KAKjDK,EAAAA,EAAAA,YAAU,KACSwB,WACf,IACE,MAAM6C,QAAa5B,IACnB2G,EAAQ/E,EAAKW,UACbqc,EAAUhd,EAAK4B,QAAU,8EACzBqb,EAAgBjd,EAAKY,eAAiB,GACxC,CAAE,MAAOnC,GACP/B,QAAQoE,MAAM,mEAAkBrC,EAClC,GAGFye,KACC,IAEH,MAAOC,EAAWC,IAAgB9hB,EAAAA,EAAAA,UAAS,KAE3CK,EAAAA,EAAAA,YAAU,KACSwB,WACf,IACE,MAAMkgB,QzCuJPlgB,iBACL,MAAMa,QAAgBZ,IAEtB,aADkBK,EAAIQ,IAAI,QAAS,CAAED,aAC1BG,KAAKA,MAAQ,EAC1B,CyC3J4Bmf,GACpBF,EAAaC,EACf,CAAE,MAAO5e,GACP/B,QAAQC,IAAI,6DAAiB8B,GAC7B2e,EAAa,GACf,GAEFG,KACC,IAEH,MAAOC,EAAWC,IAAgBniB,EAAAA,EAAAA,UAAS,IACrCoiB,EAAoBF,EAAUzgB,QAEpCpB,EAAAA,EAAAA,YAAU,KACUwB,WAChB,IACE,MAAM6M,QAAe9L,IACrBuf,EAAazT,EACf,CAAE,MAAOvL,GACP/B,QAAQC,IAAI,oEAAmB8B,GAC/Bgf,EAAa,GACf,GAEFE,KACC,IAEH,MAAOC,EAAiBC,IAAsBviB,EAAAA,EAAAA,WAAS,IAChDwiB,EAAsBC,IAA2BziB,EAAAA,EAAAA,WAAS,IAM1D0iB,EAAqBC,IAA0B3iB,EAAAA,EAAAA,WAAS,IACxD4iB,EAAkBC,IAAuB7iB,EAAAA,EAAAA,WAAS,IAClD8iB,EAAWC,IAAgB/iB,EAAAA,EAAAA,UAAS,KACpCgjB,EAAUC,IAAejjB,EAAAA,EAAAA,UAAS,IAEnCkjB,EAAoBA,CAACC,EAASza,KAClC,MAAMqJ,EAAQ,IAAIT,KACZ8R,EAAS,IAAI9R,KAAK6R,GAClBE,EAAOtT,KAAKuT,MAAMF,EAASrR,GAAK,OAEtC,IAAIwR,EAAS,GAKb,OAJcA,EAAVF,EAAO,EAAY,KAAKA,IACV,IAATA,EAAqB,QAChB,KAAKtT,KAAKyT,IAAIH,KAErB,GAAGE,MAAW7a,KAOvB,OACE9C,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEqB,KAAM,EAAGE,gBAAiB,QAASxH,SAAA,EAChDa,EAAAA,EAAAA,KAAC6R,GAAAA,WAAU,CAAA1S,UACT+F,EAAAA,EAAAA,MAACob,GAAmB,CAAAnhB,SAAA,EAClBa,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAO2Z,QAAQ7f,UAC1Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAA8BL,MAAOC,GAAO4Z,UAErE/Z,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO0K,WAAW5Q,SAAA,EAC7Ba,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAO2K,OAAO7Q,UACzBa,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CACJC,OAAQ+S,EACJ,CAAE1N,IAAK,yBAAyB0N,KAChC9S,EAAQ,MACZL,MAAOC,GAAO6D,WAGlBhE,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO4K,QAAQ9Q,SAAA,EAC1Ba,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOyD,KAAK3J,SAAE2J,KAC3B9I,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOO,OAAOzG,SAAEyG,WAGjCV,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO6Z,YAAY/f,SAAA,EAC9B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO8K,UAAUhR,SAAA,EAC5Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAoBL,MAAOC,GAAO8Z,eACzDja,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAOC,GAAOgL,aAAalR,SAAA,CAtGpB,EAsGuC,gDAEtD+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO8K,UAAUhR,SAAA,EAC5Ba,EAAAA,EAAAA,KAACuF,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAqBL,MAAOC,GAAO8Z,eAC1Dja,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAOC,GAAOgL,aAAalR,SAAA,CAAC,mCAzGhC,GAyG8C,mBAIpD+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAAhG,SAAA,EACH+F,EAAAA,EAAAA,MAAC0b,GAAQ,CAAC5Y,MAAM,qBAAMyD,MAAMzL,EAAAA,EAAAA,K,i7BAAS,IAAK6gB,YA3D1BkC,KACxBlB,GAAmB,IA0D8D1iB,SAAA,EACvE+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO2H,IAAI7N,SAAA,EACtBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAAAxG,SAAC,kBACNa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAAAxG,SAAE2J,QAET5D,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO2H,IAAI7N,SAAA,EACtBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAAAxG,SAAC,kBACNa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAAAxG,SAAEyG,WAIXV,EAAAA,EAAAA,MAAC0b,GAAQ,CACP5Y,MAAM,QACNyD,MAAMzL,EAAAA,EAAAA,K,inBAAU,IAChB6gB,YAAaA,IAAMoB,GAAuB,GAAM9iB,SAAA,CAE/CgiB,EAAUlS,KAAK1D,IACdrG,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAAAxG,SAAA,CAAiBqjB,EAAkBjX,EAAKyX,OAAQzX,EAAKvD,OAAO,OAAtDuD,EAAKsE,QAElB3K,EAAAA,EAAAA,MAACY,EAAAA,QAAgB,CAACV,MAAOC,GAAOoa,QAASxZ,QAASA,IAAMkc,GAAoB,GAAMhjB,SAAA,EAChFa,EAAAA,EAAAA,KAACijB,GAAO,CAAC9O,KAAK,aACdnU,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAO,CAAEgD,MAAO,WAAYjJ,SAAC,uDAIvCa,EAAAA,EAAAA,KAAC4gB,GAAQ,CAAC5Y,MAAM,kCAASyD,MAAMzL,EAAAA,EAAAA,KAACijB,GAAO,CAAC9O,KAAK,YAAc0M,YA9D9CqC,KACrBnB,GAAwB,IA6DwEjB,aAAczb,GAAO+Z,aAAajgB,SACvHqiB,EAAUvS,KAAI,CAACoQ,EAAKtI,KACnB/W,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAAWP,MAAOC,GAAOga,IAAIlgB,SAAEkgB,EAAIvW,MAA7BiO,QAKf/W,EAAAA,EAAAA,KAACmjB,GAAAA,QAAK,CAACC,QAASxB,EAAiByB,aAAW,EAACC,cAAc,QAAOnkB,UAChEa,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOia,eAAengB,UACjC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOka,MAAMpgB,SAAA,EACxBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOma,UAAUrgB,SAAC,kBAC/Ba,EAAAA,EAAAA,KAAC2H,EAAAA,QAAS,CACRzH,MAAO4I,EACPrB,aAAcsB,EACd3D,MAAOC,GAAOuC,SAEhB5H,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOma,UAAUrgB,SAAC,wBAC/Ba,EAAAA,EAAAA,KAAC2H,EAAAA,QAAS,CACRzH,MAAO0F,EACP6B,aAAcuZ,EACd5b,MAAOC,GAAOuC,SAEhB1C,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEuD,cAAe,MAAOR,eAAgB,iBAAkBhJ,SAAA,EACrEa,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CAACvb,MAAM,eAAK/B,QAASA,IAAM4b,GAAmB,MACrD7hB,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CACLvb,MAAM,eACN/B,QAAS9E,UACP,UzCVjBA,gBAA8B,SAAEwD,EAAQ,OAAEiB,IAC/C,MAAM5D,QAAgBZ,IAItB,aAHkBK,EAAI2H,MAAM,SAAU,CACpCzE,WAAUiB,UACT,CAAE5D,aACMG,IACb,CyCKgCqhB,CAAe,CAAE7e,SAAUmE,EAAMlD,WACvCb,EAAAA,QAAMC,MAAM,uGACZ6c,GAAmB,EACrB,CAAE,MAAOpf,GACP/B,QAAQoE,MAAM,4DAAgBrC,GAC9BsC,EAAAA,QAAMC,MAAM,+CAAa,wEAC3B,gBASZhF,EAAAA,EAAAA,KAACmjB,GAAAA,QAAK,CAACC,QAASpB,EAAqBqB,aAAW,EAACC,cAAc,OAAMnkB,UACnEa,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOia,eAAengB,UACjC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOka,MAAMpgB,SAAA,EACxBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOma,UAAUrgB,SAAC,kEAM9BgiB,EAAUlS,KAAK1D,IACdrG,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAgBC,MAAOC,GAAOqa,QAAQvgB,SAAA,EACzCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAO,CAAEqB,KAAM,GAAItH,SAAEoM,EAAKvD,SAChChI,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CACLvb,MAAM,eACN/B,QAAS9E,UACP,UzCTnBA,eAA0BuD,GAC/B,MAAM1C,QAAgBZ,IAEtB,OADAV,QAAQC,IAAI,mCAAW,SAAS+D,KACzBjD,EAAIgiB,OAAO,SAAS/e,IAAM,CAAE1C,WACrC,CyCMkC0hB,CAAWnY,EAAKsE,KACtBuR,GAAathB,GAAQA,EAAK8Z,QAAO+J,GAAQA,EAAK9T,MAAQtE,EAAKsE,OAC7D,CAAE,MAAOpN,GACP/B,QAAQC,IAAI,iDAAe8B,EAC7B,OAVK8I,EAAKsE,QAgBlB7P,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CAACvb,MAAM,eAAK/B,QAASA,IAAMgc,GAAuB,aAM/DjiB,EAAAA,EAAAA,KAACmjB,GAAAA,QAAK,CAACC,QAASlB,EAAkBmB,aAAW,EAACC,cAAc,QAAOnkB,UACjEa,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOia,eAAengB,UACjC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOka,MAAMpgB,SAAA,EACxBa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOma,UAAUrgB,SAAC,wBAC/Ba,EAAAA,EAAAA,KAAC2H,EAAAA,QAAS,CACRD,YAAY,uBACZxH,MAAOkiB,EACP3a,aAAc4a,EACdjd,MAAOC,GAAOuC,SAGhB5H,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOma,UAAUrgB,SAAC,+BAC/Ba,EAAAA,EAAAA,KAAC2H,EAAAA,QAAS,CACRD,YAAY,qBACZxH,MAAOoiB,EACP7a,aAAc8a,EACdnd,MAAOC,GAAOuC,MACdgc,aAAa,6BAGf1e,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAO,CAAEuD,cAAe,MAAOR,eAAgB,iBAAkBhJ,SAAA,EACrEa,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CAACvb,MAAM,eAAK/B,QAASA,KAC1Boc,EAAa,IACbE,EAAY,IACZJ,GAAoB,OAEtBniB,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CAACvb,MAAM,eAAK/B,QAAS9E,UAC1B,GAAKihB,EAAUjZ,QAAWmZ,EAASnZ,OAEnC,UzCxEfhI,gBAAwB,MAAE6G,EAAK,OAAEgb,IACtC,MAAMhhB,QAAgBZ,IAEtB,OADYK,EAAI2C,KAAK,QAAS,CAAE4D,QAAOgb,UAAU,CAAEhhB,YACxCG,MAAQ,EACrB,CyCqE8B0hB,CAAS,CAAE7b,MAAOoa,EAAWY,OAAQV,IAE3C,MAAMtZ,EAAOwZ,EAAkBF,EAAUF,GACnC0B,EAAU,CACdpf,GAAIkM,KAAKuC,MACTnK,QAGFoY,GAAathB,GAAQ,IAAIA,EAAMgkB,KAC/BzB,EAAa,IACbE,EAAY,IACZJ,GAAoB,EACtB,CAAE,MAAO1f,GACP/B,QAAQoE,MAAM,mCAAgBrC,EAChC,gBASVzC,EAAAA,EAAAA,KAACmjB,GAAAA,QAAK,CAACC,QAAStB,EAAsBuB,aAAW,EAACC,cAAc,QAAOnkB,UACrEa,EAAAA,EAAAA,KAACmF,EAAAA,QAAI,CAACC,MAAOC,GAAOia,eAAengB,UACjC+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAOwa,WAAW1gB,SAAA,EAC7B+F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOC,GAAO2a,iBAAiB7gB,SAAA,EACnCa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOma,UAAUrgB,SAAC,2CAC/B+F,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAOC,GAAO4a,aAAa9gB,SAAA,CAAC,2CAAS+F,EAAAA,EAAAA,MAACS,EAAAA,QAAI,CAACP,MAAOC,GAAOkQ,MAAMpW,SAAA,CAAEuiB,EAAkB,mBAG3F1hB,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAOC,GAAO6a,eACdja,QAASA,KACP8b,GAAwB,GACxBhf,EAAWyI,SAAS,cACpBrM,UAEFa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAO8a,mBAAmBhhB,SAAC,6EAG1Ca,EAAAA,EAAAA,KAAC8F,EAAAA,QAAgB,CACfV,MAAOC,GAAO+a,aACdna,QAASA,KACP8b,GAAwB,GACxBhf,EAAWyI,SAAS,eACpBrM,UAEFa,EAAAA,EAAAA,KAAC2F,EAAAA,QAAI,CAACP,MAAOC,GAAOgb,iBAAiBlhB,SAAC,qGAGxCa,EAAAA,EAAAA,KAACujB,GAAAA,QAAM,CAACvb,MAAM,eAAK/B,QAASA,IAAM8b,GAAwB,qBAStE/hB,EAAAA,EAAAA,KAACoL,GAAS,MAGhB,CC1SA,MAAM2Y,IAAQC,EAAAA,EAAAA,yBClBdC,EAAAA,EAAAA,UDoBe,WACb,MAAOC,EAAYC,IAAiB7kB,EAAAA,EAAAA,WAAS,GAmB7C,OAhBAK,EAAAA,EAAAA,YAAU,MACRwB,iBACE,UACQijB,EAAAA,6BE/BLC,EAAKC,UAAU,CACpB,mBAAoB7e,EAAQ,MAC5B,qBAAsBA,EAAQ,MAC9B,oBAAqBA,EAAQ,MAC7B,sBAAuBA,EAAQ,MAC/B,kBAAmBA,EAAQ,OF4BzB,CAAE,MAAOmN,GACPlS,QAAQoY,KAAKlG,EACf,CAAC,QACCuR,GAAc,SACRC,EAAAA,WACR,CACF,CAEAG,KACC,IAEEL,GAGHlkB,EAAAA,EAAAA,KAACd,EAAa,CAAAC,UACZa,EAAAA,EAAAA,KAACwkB,EAAAA,oBAAmB,CAAArlB,UAElB+F,EAAAA,EAAAA,MAAC6e,GAAMU,UAAS,CAACC,iBAAiB,QAAQC,cAAe,CAAEC,aAAa,GAAQzlB,SAAA,EAC9Ea,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,QAAQgc,UAAWhiB,KACtC9C,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,OAAOgc,UAAWjc,KACrC7I,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,eAAegc,UAAWnb,KAC7C3J,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,OAAOgc,UAAW9T,MACrChR,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,QAAQgc,UAAW9S,MACtChS,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,QAAQgc,UAAWnM,MACtC3Y,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,OAAOgc,UAAW3I,MACrCnc,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,YAAYgc,UAAWvH,MAC1Cvd,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,aAAagc,UAAW/G,MAC3C/d,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,gBAAgBgc,UAAWzG,MAC9Cre,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,aAAagc,UAAWhG,MAC3C9e,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,aAAagc,UAAW/F,MAC3C/e,EAAAA,EAAAA,KAAC+jB,GAAMc,OAAM,CAAC/b,KAAK,UAAUgc,UAAW/D,YAnBxB,IAwB1B,G,mlOGtEIgE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBrM,IAAjBsM,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CAGAH,EAAoB5L,EAAIiM,E,MCzBxB,IAAIC,EAAW,GACfN,EAAoBO,EAAI,CAACpb,EAAQqb,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS9O,EAAI,EAAGA,EAAIwO,EAASvkB,OAAQ+V,IAAK,CAGzC,IAFA,IAAK0O,EAAUC,EAAIC,GAAYJ,EAASxO,GACpC+O,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASzkB,OAAQ+kB,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaxL,OAAO6L,KAAKf,EAAoBO,GAAGS,OAAOC,GAASjB,EAAoBO,EAAEU,GAAKT,EAASM,MAC9IN,EAASU,OAAOJ,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASY,OAAOpP,IAAK,GACrB,IAAIQ,EAAImO,SACE7M,IAANtB,IAAiBnN,EAASmN,EAC/B,CACD,CACA,OAAOnN,CAnBP,CAJCub,EAAWA,GAAY,EACvB,IAAI,IAAI5O,EAAIwO,EAASvkB,OAAQ+V,EAAI,GAAKwO,EAASxO,EAAI,GAAG,GAAK4O,EAAU5O,IAAKwO,EAASxO,GAAKwO,EAASxO,EAAI,GACrGwO,EAASxO,GAAK,CAAC0O,EAAUC,EAAIC,G,KCJ/BV,EAAoBrT,EAAKyT,IACxB,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,IAAOhB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBzT,EAAE4U,EAAQ,CAAEE,EAAGF,IAC5BA,GCLRnB,EAAoBzT,EAAI,CAAC4T,EAASmB,KACjC,IAAI,IAAIL,KAAOK,EACXtB,EAAoBuB,EAAED,EAAYL,KAASjB,EAAoBuB,EAAEpB,EAASc,IAC5E/L,OAAOsM,eAAerB,EAASc,EAAK,CAAEQ,YAAY,EAAMxkB,IAAKqkB,EAAWL,MCJ3EjB,EAAoBpR,EAAI,WACvB,GAA0B,kBAAf8S,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOhU,GACR,GAAsB,kBAAXiU,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB7B,EAAoBuB,EAAI,CAACO,EAAKC,IAAU7M,OAAO8M,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF/B,EAAoB1N,EAAK6N,IACH,qBAAXgC,QAA0BA,OAAOC,aAC1ClN,OAAOsM,eAAerB,EAASgC,OAAOC,YAAa,CAAElnB,MAAO,WAE7Dga,OAAOsM,eAAerB,EAAS,aAAc,CAAEjlB,OAAO,KCLvD8kB,EAAoBqC,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNtC,EAAoBO,EAAEO,EAAKyB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BtlB,KACvD,IAGI8iB,EAAUsC,GAHT/B,EAAUkC,EAAaC,GAAWxlB,EAGhB2U,EAAI,EAC3B,GAAG0O,EAASoC,MAAMljB,GAAgC,IAAxB4iB,EAAgB5iB,KAAa,CACtD,IAAIugB,KAAYyC,EACZ1C,EAAoBuB,EAAEmB,EAAazC,KACrCD,EAAoB5L,EAAE6L,GAAYyC,EAAYzC,IAGhD,GAAG0C,EAAS,IAAIxd,EAASwd,EAAQ3C,EAClC,CAEA,IADGyC,GAA4BA,EAA2BtlB,GACrD2U,EAAI0O,EAASzkB,OAAQ+V,IACzByQ,EAAU/B,EAAS1O,GAChBkO,EAAoBuB,EAAEe,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOvC,EAAoBO,EAAEpb,IAG1B0d,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmB9N,QAAQyN,EAAqBO,KAAK,KAAM,IAC3DF,EAAmB7N,KAAOwN,EAAqBO,KAAK,KAAMF,EAAmB7N,KAAK+N,KAAKF,G,KC7CvF,IAAIG,EAAsBhD,EAAoBO,OAAE3M,EAAW,CAAC,KAAK,IAAOoM,EAAoB,QAC5FgD,EAAsBhD,EAAoBO,EAAEyC,E","sources":["contexts/TimerContext.js","firebase.js","utils/api.js","screens/LoginScreen.js","components/InputField.js","components/NextButton.js","components/Header.js","screens/NameScreen.js","screens/ProfileImageScreen.js","components/BottomNav.js","components/StudyTaskItem.js","constants/colors.js","constants/fonts.js","components/styles/TodoList.styles.js","components/TodoList.js","components/LessonSection.js","components/styles/Profile.styles.js","components/Profile.js","screens/HomeScreen.js","screens/TimerScreen.js","screens/styles/Group.styles.js","components/styles/SubjectList.styles.js","components/SubjectList.js","components/styles/WeeklyStars.styles.js","components/WeeklyStars.js","components/dividingLine.js","components/GroupMemberItem.js","components/GroupMemberList.js","components/styles/NameTag.styles.js","components/NameTag.js","screens/GroupScreen.js","screens/styles/Rank.styles.js","screens/RankScreen.js","screens/GroupNameScreen.js","components/ColorPicker.js","screens/GroupColorScreen.js","screens/GroupCompleteScreen.js","screens/GroupJoin1Screen.js","screens/GroupJoin2Screen.js","screens/styles/Profile.styles.js","constants/GlobalScreenWrapper.js","components/styles/InfoCard.styles.js","components/InfoCard.js","screens/ProfileScreen.js","App.js","index.js","utils/loadFonts.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nconst TimerContext = createContext();\n\nexport function TimerProvider({ children }) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsed, setElapsed] = useState(0);\n  const categoryList = [\n    \"😱 수학키움반\",\n    \"응용과 개발\",\n    \"과학 A팀\",\n    \"🧠 파이팅\",\n  ];\n  const [activeCategory, setActiveCategory] = useState(categoryList[0]);\n\n  useEffect(() => {\n    let timer;\n    if (isRunning) {\n      timer = setInterval(() => {\n        setElapsed((prev) => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isRunning]);\n\n  return (\n    <TimerContext.Provider\n      value={{\n        isRunning,\n        setIsRunning,\n        elapsed,\n        activeCategory,\n        setActiveCategory,\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n}\n\nexport function useTimer() {\n  return useContext(TimerContext);\n}\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport Constants from 'expo-constants';\n\nconst {\n  apiKey,\n  authDomain,\n  projectId,\n  appId,\n} = Constants.expoConfig?.extra ?? {};\n\nconsole.log('Firebase Config:', { apiKey, authDomain, projectId, appId });\n\nconst firebaseConfig = {\n  apiKey: apiKey,\n  authDomain: authDomain,\n  projectId: projectId,\n  appId: appId,\n};\n\n// Firebase 앱이 이미 초기화되었는지 확인\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const auth = firebase.auth();","import axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\nimport Constants from \"expo-constants\";\n\nconst { BASE_URL } = Constants.expoConfig.extra;\n\n// JWT 헤더 생성 함수\nasync function authHeaders() {\n  const token = await SecureStore.getItemAsync(\"accessToken\");\n  return {\n    Authorization: token ? `Bearer ${token}` : \"\",\n    \"Content-Type\": \"application/json\",\n  };\n}\n\n// axios 인스턴스\nconst api = axios.create({\n  baseURL: `${BASE_URL}`,\n  timeout: 10000,\n});\n\n// 응답 인터셉터: 401 시 토큰 삭제\napi.interceptors.response.use(\n  (res) => res,\n  async (err) => {\n    if (err.response?.status === 401) {\n      await SecureStore.deleteItemAsync(\"accessToken\");\n      // TODO: 네비게이션으로 로그인 화면 이동\n    }\n    return Promise.reject(err);\n  }\n);\n\n// 오늘 날짜(YYYY-MM-DD) 헬퍼\nfunction getToday() {\n  return new Date().toISOString().slice(0, 10);\n}\n\n// 인증 / 로그인 관련\nexport async function loginWithGoogle({ idToken }) {\n  return api.post(\"/auth/login\", { idToken });\n}\n\nexport async function registerNickname(nickname) {\n  const headers = await authHeaders();\n  return api.patch(\"/auth/register\", { nickname }, { headers });\n}\n\nexport async function registerProfileImage(profile_image) {\n  const headers = await authHeaders();\n  return api.patch(\"/auth/register\", { profile_image }, { headers });\n}\n\n// 홈 / 타이머\nexport async function fetchHome() {\n  const headers = await authHeaders();\n  return api.get(\"/home\", { headers });\n}\n\nexport async function fetchTimer(groupId) {\n  const headers = await authHeaders();\n  const date = getToday();\n  return api.get(`/timers?group_id=${groupId}&date=${date}`, { headers });\n}\n\nexport async function startTimer(groupId) {\n  const headers = await authHeaders();\n  return api.post(`/timers/${groupId}/start`, {}, { headers });\n}\n\nexport async function stopTimer(groupId) {\n  const headers = await authHeaders();\n  return api.post(`/timers/${groupId}/stop`, {}, { headers });\n}\n\nexport async function fetchAccumulatedTime(date) {\n  const headers = await authHeaders();\n  return api.get(`/timers/accumulated-time?date=${date}`, { headers });\n}\n\n// 그룹 관련\nexport async function postGroup({ name, color }) {\n  console.log(\"그룹아이디\", name, color)\n  const headers = await authHeaders();\n  return api.post(`/group`, { name, color }, {\n    headers,\n  });\n}\n\nexport async function joinGroup() {\n  const headers = await authHeaders();\n  return api.post(`/group`, {\n    headers,\n  });\n}\n\nexport async function fetchGroupsByUser() {\n  const headers = await authHeaders();\n  const res = await api.get(`/group`, {\n    headers,\n  });\n  return res.data;\n}\n\nexport async function fetchGroupDetail(groupId) {\n  const headers = await authHeaders();\n  const res = await api.get(`/group/${groupId}`, { headers });\n  return res.data;\n}\n\nexport async function fetchTodosByGroup(groupId) {\n  const headers = await authHeaders();\n  const res = await api.get(`/todos/group/${groupId}`, { headers });\n  return res.data;\n}\n\n// 그룹 전체 랭킹\nexport async function fetchAllGroupRankings() {\n  const headers = await authHeaders();\n  const res = await api.get(`/group/ranking`, { headers });\n  return res.data;\n}\n\n// 그룹 랭킹\nexport async function fetchMyGroupRankings(userId) {\n  const headers = await authHeaders();\n  const res = await api.get(`/group/ranking/user`, {\n    params: { user_id: userId },\n    headers,\n  });\n  return res.data;\n}\n\n\n// 유저 투두 관련\nexport async function fetchUserTodos() {\n  const headers = await authHeaders();\n  return api.get('/todos', { headers })\n}\n\nexport async function createTodo({ group_id, title }) {\n  const headers = await authHeaders();\n  return api.post(\"/todos\", { group_id, title }, { headers });\n}\n\n// 투두 수정\nexport async function updateTodo(todoId, { title }) {\n  const headers = await authHeaders();\n  return api.patch(`/todos/${todoId}`, { title }, { headers })\n}\n\n// 투두 완료 / 취소\nexport async function updateStatusTodo(todoId, { isDone }) {\n  const headers = await authHeaders();\n  return api.patch(`/todos/${todoId}`, { isDone }, { headers })\n}\n\nexport async function deleteTodo(todoId) {\n  const headers = await authHeaders();\n  return api.delete(`/todos/${todoId}`, { headers })\n}\n\n\n// 유저 관련\nexport async function fetchUserInfo() {\n  const headers = await authHeaders();\n  const res = await api.get('/users', {\n    headers\n  });\n  return res.data;\n};\n\nexport async function updateUserInfo({ nickname, slogan }) {\n  const headers = await authHeaders();\n  const res = await api.patch('/users', {\n    nickname, slogan\n  }, { headers });\n  return res.data;\n}\n\nexport async function deleteUser() {\n  const headers = await authHeaders();\n  return api.delete('/users', { headers });\n}\n\n\n// 디데이 관련\nexport async function postDday({ title, end_at }) {\n  const headers = await authHeaders({});\n  const res = api.post('/dday', { title, end_at }, { headers })\n  return res.data ?? [];\n}\n\nexport async function fetchDdays() {\n  const headers = await authHeaders();\n  const res = await api.get('/dday', { headers })\n  return res.data.data ?? [];\n}\n\nexport async function updateDday(id) {\n  const headers = await authHeaders();\n  return api.patch(`/dday/${id}`, { headers })\n}\n\nexport async function deleteDday(id) {\n  const headers = await authHeaders();\n  console.log(\"삭제 요청 →\", `/dday/${id}`);\n  return api.delete(`/dday/${id}`, { headers })\n}\n\nexport default api;\n","// screens/LoginScreen.js\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport * as Google from \"expo-auth-session/providers/google\";\nimport firebase from \"firebase/compat/app\";\nimport { auth } from \"../firebase\";\nimport Constants from \"expo-constants\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { loginWithGoogle } from \"../utils/api\"; // ← 변경\nimport * as SecureStore from \"expo-secure-store\";\n\nWebBrowser.maybeCompleteAuthSession();\n\nexport default function LoginScreen({ navigation }) {\n  const { iosClientId, webClientId } = Constants.expoConfig?.extra ?? {};\n  const [isLoading, setIsLoading] = useState(false);\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    iosClientId,\n    webClientId,\n  });\n\n  useEffect(() => {\n    if (response?.type === \"success\" && response.authentication?.idToken) {\n      handleGoogleResponse(response.authentication);\n    }\n  }, [response]);\n\n  const handleGoogleResponse = async ({ idToken: rawIdToken, accessToken }) => {\n    setIsLoading(true);\n    try {\n      if (!rawIdToken) throw new Error(\"ID 토큰을 받지 못했습니다.\");\n\n      // 1) Firebase 인증\n      const credential = firebase.auth.GoogleAuthProvider.credential(\n        rawIdToken,\n        accessToken\n      );\n      const { user } = await auth.signInWithCredential(credential);\n\n      // 2) Firebase ID 토큰\n      const firebaseIdToken = await user.getIdToken(true);\n      console.log(\"id token\", await user.getIdToken());\n\n      // 3) 백엔드 로그인 API 호출\n      const res = await loginWithGoogle({ idToken: firebaseIdToken });\n      const { accessToken: jwt, user: backendUser } = res.data;\n\n      // 4) JWT 저장\n      await SecureStore.setItemAsync(\"accessToken\", jwt);\n      console.log(\"JWT Token:\", jwt);\n\n      //  userId 저장 추가\n      await SecureStore.setItemAsync(\"userId\", String(backendUser.id));\n      // 5) 네비게이션\n      if (!backendUser.nickname) {\n        navigation.replace(\"Name\");\n      } else if (!backendUser.profile_image) {\n        navigation.replace(\"ProfileImage\");\n      } else {\n        navigation.replace(\"Home\");\n      }\n    } catch (error) {\n      console.error(\"=== 로그인 실패 ===\", error);\n      if (error.response) {\n        console.error(\"Response status:\", error.response.status);\n        console.error(\"Response data:\", error.response.data);\n      }\n      Alert.alert(\n        \"로그인 오류\",\n        error.response?.data?.message || error.message\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    if (!request) {\n      Alert.alert(\"설정 오류\", \"Google 로그인 설정을 확인해주세요.\");\n      return;\n    }\n    try {\n      await auth.signOut();\n      await promptAsync({ prompt: \"select_account\" });\n    } catch (error) {\n      console.error(\"프롬프트 에러:\", error);\n      Alert.alert(\"로그인 실패\", \"다시 시도해주세요.\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image source={require(\"../assets/logoText.png\")} style={styles.logo} />\n      <Text style={styles.slogan}>배움을 채우다</Text>\n      <Image\n        source={require(\"../assets/loginLogo.png\")}\n        style={styles.loginLogo}\n      />\n\n      {/* <TouchableOpacity\n        style={styles.kakaoButton}\n        onPress={() => navigation.navigate(\"Name\")}\n      >\n        <Text style={styles.kakaoText}>카카오로 시작하기</Text>\n      </TouchableOpacity> */}\n\n      <TouchableOpacity\n        style={[styles.googleButton, isLoading && styles.disabledButton]}\n        onPress={handleGoogleLogin}\n        disabled={isLoading || !request}\n      >\n        <Text style={styles.googleText}>\n          {isLoading ? \"로그인 중...\" : \"구글로 시작하기\"}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    // justifyContent: 'center',\n    backgroundColor: \"#fff\",\n  },\n  slogan: { fontSize: 16 },\n  kakaoButton: {\n    backgroundColor: \"#FEE500\",\n    width: \"80%\",\n    padding: 12,\n    borderRadius: 8,\n    // marginTop: 24,\n    alignItems: \"center\",\n  },\n  kakaoText: { fontWeight: \"bold\" },\n  googleButton: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    width: \"80%\",\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 17,\n    alignItems: \"center\",\n  },\n  googleText: {},\n  logo: {\n    width: 206,\n    height: 84,\n    marginBottom: 35,\n    marginTop: 202,\n  },\n  loginLogo: {\n    width: 313,\n    height: 228,\n    marginTop: 61,\n    marginBottom: 39,\n  },\n});\n","// components/InputField.js\nimport React from \"react\";\nimport { TextInput, StyleSheet } from \"react-native\";\n\nexport default function InputField({ value, onChangeText, placeholder }) {\n  return (\n    <TextInput\n      style={styles.input}\n      value={value}\n      onChangeText={onChangeText}\n      placeholder={placeholder}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    width: 328,\n    height: 61,\n    borderWidth: 1,\n    borderColor: \"#F57353\",\n    borderRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 22,\n  },\n});\n","import { TouchableOpacity, Text, StyleSheet } from \"react-native\";\n\nexport default function NextButton({ title, onPress, disabled, style }) {\n  return (\n    <TouchableOpacity\n      style={[\n        styles.button,\n        style, // 외부 스타일 먼저\n        { backgroundColor: disabled ? \"#ABB0BC\" : \"#F57353\" }, // 그 다음 내부 스타일\n      ]}\n      disabled={disabled}\n      onPress={onPress}\n    >\n      <Text style={styles.buttonText}>{title}</Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 328,\n    height: 61,\n    borderRadius: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n});\n","import React from 'react';\nimport { View, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function Header() {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={() => navigation.goBack()}>\n        <Image source={require('../assets/backArrow.png')} style={styles.backArrow} />\n      </TouchableOpacity>\n      <Image source={require('../assets/logoText.png')} style={styles.logo} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 42,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  backArrow: {\n    width: 28,\n    height: 28,\n    resizeMode: 'contain',\n  },\n  logo: {\n    width: 71,\n    height: 29,\n    resizeMode: 'contain',\n  },\n});\n","// screens/NameScreen.js\nimport React, { useState, useEffect } from \"react\";\nimport { View, Text, Image, StyleSheet, Alert } from \"react-native\";\nimport InputField from \"../components/InputField\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\nimport { registerNickname } from \"../utils/api\";   // ★ named export\nimport * as SecureStore from \"expo-secure-store\";\n\nexport default function NameScreen({ navigation }) {\n  const [name, setName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const token = await SecureStore.getItemAsync(\"accessToken\");\n      if (!token) {\n        Alert.alert(\"인증 오류\", \"로그인이 필요합니다.\", [\n          { text: \"확인\", onPress: () => navigation.replace(\"Login\") }\n        ]);\n      }\n    })();\n  }, []);\n\n  const handleNext = async () => {\n    if (!name.trim()) {\n      return Alert.alert(\"알림\", \"이름을 입력해주세요.\");\n    }\n    setIsLoading(true);\n    try {\n      const res = await registerNickname(name);\n      console.log(\"=== 닉네임 저장 응답 ===\", res.data);\n      navigation.replace(\"ProfileImage\");\n    } catch (err) {\n      console.error(\"=== 닉네임 저장 실패 ===\", err.response || err);\n      if (err.response?.status === 401) {\n        Alert.alert(\"인증 오류\", \"다시 로그인해주세요.\", [\n          { text: \"확인\", onPress: () => navigation.replace(\"Login\") }\n        ]);\n      } else {\n        Alert.alert(\"오류\", \"이름 저장에 실패했습니다.\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>계정 만들기 step 1</Text>\n      <Text style={styles.label}>이름을 알려주세요!</Text>\n      <Image\n        source={require(\"../assets/character.png\")}\n        style={styles.image}\n      />\n      <InputField\n        value={name}\n        onChangeText={setName}\n        placeholder=\"눌러서 작성하기\"\n      />\n      <NextButton\n        title={isLoading ? \"저장 중...\" : \"다음 단계\"}\n        disabled={!name || isLoading}\n        onPress={handleNext}\n        style={styles.btn}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 31, backgroundColor: \"#fff\" },\n  title: { marginVertical: 55, fontSize: 14, color: \"#7A7A7A\" },\n  label: { fontSize: 16, fontWeight: \"bold\", marginBottom: 9 },\n  btn: { marginTop: 312 },\n  image: {\n    position: \"absolute\",\n    top: 140,\n    left: 260,\n    width: 96,\n    height: 118,\n    resizeMode: \"contain\",\n  },\n});\n","// screens/ProfileImageScreen.js\nimport React, { useState, useEffect } from \"react\";\nimport { View, Text, TouchableOpacity, StyleSheet, Image, Alert } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as ImageManipulator from \"expo-image-manipulator\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\nimport { registerProfileImage } from \"../utils/api\";  // ★ named export\nimport * as SecureStore from \"expo-secure-store\";\n\nexport default function ProfileImageScreen({ navigation }) {\n  const [imageUri, setImageUri] = useState(null);\n  const [imageBase64, setImageBase64] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const token = await SecureStore.getItemAsync(\"accessToken\");\n      if (!token) {\n        Alert.alert(\"인증 오류\", \"로그인이 필요합니다.\", [\n          { text: \"확인\", onPress: () => navigation.replace(\"Login\") }\n        ]);\n      }\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      return Alert.alert(\"권한 오류\", \"갤러리 접근 권한이 필요합니다.\");\n    }\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      quality: 1,\n      base64: false,\n    });\n    if (result.canceled) return;\n\n    const manip = await ImageManipulator.manipulateAsync(\n      result.assets[0].uri,\n      [{ resize: { width: 200, height: 200 } }],\n      { compress: 0.3, base64: true }\n    );\n    setImageUri(manip.uri);\n    setImageBase64(manip.base64);\n  };\n\n  const handleComplete = async () => {\n    if (!imageBase64) {\n      return Alert.alert(\"알림\", \"프로필 사진을 선택해주세요.\");\n    }\n    setIsLoading(true);\n    try {\n      const res = await registerProfileImage(imageBase64);\n      console.log(\"=== 프로필 저장 응답 ===\", res.data);\n      navigation.replace(\"Home\");\n    } catch (err) {\n      console.error(\"=== 프로필 저장 실패 ===\", err.response || err);\n      if (err.response?.status === 401) {\n        Alert.alert(\"인증 오류\", \"다시 로그인해주세요.\", [\n          { text: \"확인\", onPress: () => navigation.replace(\"Login\") }\n        ]);\n      } else {\n        Alert.alert(\"오류\", \"프로필 저장에 실패했습니다.\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>계정 만들기 step 2</Text>\n      <Text style={styles.label}>프로필 사진을 올려주세요!</Text>\n      <TouchableOpacity style={styles.imageWrapper} onPress={pickImage}>\n        {imageUri ? (\n          <Image source={{ uri: imageUri }} style={styles.image} />\n        ) : (\n          <View style={styles.placeholder}>\n            <Text style={styles.placeholderText}>사진 고르기</Text>\n            <Image\n              source={require(\"../assets/logoImage.png\")}\n              style={styles.backArrow}\n            />\n          </View>\n        )}\n      </TouchableOpacity>\n      <NextButton\n        title={isLoading ? \"저장 중...\" : \"다음 단계\"}\n        disabled={!imageUri || isLoading}\n        onPress={handleComplete}\n        style={styles.btn}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 31, backgroundColor: \"#fff\" },\n  title: { marginVertical: 55, fontSize: 14, color: \"#7A7A7A\" },\n  label: { fontSize: 16, fontWeight: \"bold\", marginBottom: 9 },\n  imageWrapper: {\n    width: 162,\n    height: 162,\n    borderRadius: 81,\n    overflow: \"hidden\",\n    backgroundColor: \"#F8F8F8\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginBottom: 190,\n    marginTop: 30,\n  },\n  placeholder: { flex: 1, justifyContent: \"flex-end\", alignItems: \"center\" },\n  placeholderText: { color: \"#C8C8C8\", fontSize: 14 },\n  image: { width: \"100%\", height: \"100%\" },\n  // backArrow: { marginTop: 8, width: 24, height: 24 },\n  btn: { marginTop: 0 },\n});\n","import React from \"react\";\nimport { View, TouchableOpacity, Text, StyleSheet } from \"react-native\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Image } from \"react-native\";\n\n// 아이콘 주석 : 디자인과는 조금 다르지만 화질이 좋음, 일단 이미지로 했음\nexport default function BottomNav() {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const current = route.name;\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        style={styles.item}\n        onPress={() => navigation.navigate(\"Group\")} // 이동할 페이지 넣기 일단은 임시\n      >\n        {/* <Ionicons\n          name=\"people-outline\"\n          size={24}\n          color={current === \"GroupScreen\" ? \"#F57353\" : \"#ABB0BC\"}\n        />\n        <Text style={[styles.text, current === \"GroupScreen\" && styles.active]}>\n          Group\n        </Text> */}\n        <Image\n          source={\n            current === \"Group\"\n              ? require(\"../assets/nav_group_active.png\")\n              : require(\"../assets/nav_group_inactive.png\")\n          }\n          style={styles.icon}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={styles.item}\n        onPress={() => navigation.navigate(\"Home\")}\n      >\n        {/* <MaterialCommunityIcons\n          name=\"timer-outline\"\n          size={24}\n          color={current === \"HomeScreen\" ? \"#F57353\" : \"#ABB0BC\"}\n        />\n        <Text style={[styles.text, current === \"HomeScreen\" && styles.active]}>\n          Home\n        </Text> */}\n        <Image\n          source={\n            current === \"Home\"\n              ? require(\"../assets/nav_home_active.png\")\n              : require(\"../assets/nav_home_inactive.png\")\n          }\n          style={styles.icon}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={styles.item}\n        onPress={() => navigation.navigate(\"Profile\")} // 이동할 페이지 넣기 일단은 임시\n      >\n        {/* <Ionicons\n          name=\"person-outline\"\n          size={24}\n          color={current === \"ProfileScreen\" ? \"#F57353\" : \"#ABB0BC\"}\n        />\n        <Text\n          style={[styles.text, current === \"ProfileScreen\" && styles.active]}\n        >\n          Profile\n        </Text> */}\n        <Image\n          source={\n            current === \"Profile\"\n              ? require(\"../assets/nav_profile_active.png\")\n              : require(\"../assets/nav_profile_inactive.png\")\n          }\n          style={styles.icon}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 95,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    borderTopWidth: 1,\n    borderColor: \"#eee\",\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: -4 },\n    shadowOpacity: 0.05,\n    shadowRadius: 8,\n    zIndex: 10,\n    paddingBottom: 20,\n  },\n  item: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  //   text: {\n  //     fontSize: 12,\n  //     color: \"#ABB0BC\",\n  //     marginTop: 4,\n  //   },\n  //   active: {\n  //     color: \"#F57353\",\n  //     fontWeight: \"bold\",\n  //   },\n  icon: {\n    width: 32,\n    height: 47,\n    resizeMode: \"contain\",\n  },\n});\n","// src/components/StudyTaskItem.js\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Image,\n  StyleSheet\n} from \"react-native\";\n\nexport default function StudyTaskItem({\n  subject = \"응용과 개발\",\n  time = \"00:00:00\",\n  onPlusPress  // + 버튼 눌렀을 때 실행될 콜백\n}) {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        style={styles.subjectButton}\n        onPress={onPlusPress}\n      >\n        <Text style={styles.subjectText}>{subject}</Text>\n        <View style={styles.plusCircle}>\n          <Text style={styles.plusText}>＋</Text>\n        </View>\n      </TouchableOpacity>\n\n      <View style={styles.timerSection}>\n        <Text style={styles.timerText}>{time}</Text>\n        <Image\n          source={require(\"../assets/clock.png\")}\n          style={styles.icon}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 34,\n  },\n  subjectButton: {\n    flexDirection: \"row\",\n    backgroundColor: \"#5399F5\",\n    borderRadius: 24,\n    paddingHorizontal: 12,\n    paddingVertical: 6.5,\n    alignItems: \"center\",\n  },\n  subjectText: {\n    color: \"#fff\",\n    fontSize: 13,\n    marginRight: 6,\n  },\n  plusCircle: {\n    width: 17,\n    height: 17,\n    backgroundColor: \"#fff\",\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  plusText: {\n    color: \"#000\",\n    fontSize: 13,\n    fontWeight: \"400\",\n  },\n  timerSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  timerText: {\n    color: \"#5399F5\",\n    fontSize: 14,\n    fontWeight: \"400\",\n    marginRight: 4,\n  },\n  icon: {\n    width: 15,\n    height: 15,\n    resizeMode: \"contain\",\n  },\n});\n","export const COLORS = {\n  mainColor: '#F57353',\n  line: '#F1F1F1',\n  deactivate: '#ABB0BC',\n\n  // 그룹 컬러\n  sora: '#6093E4',\n  purple: '#CF60FF',\n  brown: '#D2A16A',\n  mint: '#65D4B5',\n  green: '#28AF37',\n  orange: '#F3B456',\n  yellow: '#FDEA5D',\n  light_green: '#AFD041',\n  pink: '#F99EEF',\n  sodomy: '#484DB4',\n  red: '#DD5A5A',\n\n  // Flowkit\n  charcoal: '#222222',\n};","export const fonts = {\n  light: 'Pretendard-Light',\n  regular: 'Pretendard-Regular',\n  medium: 'Pretendard-Medium',\n  semibold: 'Pretendard-SemiBold',\n  bold: 'Pretendard-Bold',\n};","import { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  TodoBox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    paddingVertical: 5,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  iconContainer: {\n    position: 'relative',\n  },\n  checkIcon: {\n    position: 'absolute',\n    top: 9,\n    left: 7,\n  },\n  title: {\n    fontSize: 15,\n    fontFamily: fonts.regular,\n  },\n  heart: {\n    width: 14,\n    height: 14,\n  }\n});","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Pressable,\n  Image\n} from \"react-native\";\nimport { styles } from \"./styles/TodoList.styles\";\nimport StarIcon from \"../assets/Star.svg\";\nimport CheckIcon from \"../assets/check.svg\";\n\nexport default function TodoList({ title, is_completed, initialLiked, memberColor }) {\n  const [starred, setStarred] = useState(is_completed);\n  const [liked, setLiked] = useState(initialLiked);\n\n  return (\n    <View style={styles.TodoBox}>\n      <View style={styles.row}>\n        <Pressable onPress={() => setStarred(prev => !prev)}>\n          <View style={styles.iconContainer}>\n            <StarIcon\n              width={24}\n              height={24}\n              color={starred ? memberColor : \"#D9D9D9\"}\n            />\n            {starred && <CheckIcon style={styles.checkIcon} />}\n          </View>\n        </Pressable>\n        <Text style={styles.title}>{title}</Text>\n      </View>\n      <Pressable onPress={() => setLiked(prev => !prev)}>\n        <Image\n          source={\n            liked\n              ? require(\"../assets/하트.png\")\n              : require(\"../assets/빈하트.png\")\n          }\n          style={styles.heart}\n        />\n      </Pressable>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  Alert,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport StudyTaskItem from \"./StudyTaskItem\";\nimport TodoList from \"./TodoList\";\nimport { fetchHome, createTodo } from \"../utils/api\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function LessonSection() {\n  const navigation = useNavigation();\n\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // 홈 데이터 로드\n  const load = () => {\n    setLoading(true);\n    fetchHome()\n      .then((res) => setGroups(res.data))\n      .catch((err) => {\n        console.error(err);\n        Alert.alert(\"오류\", \"홈 정보 불러오기 실패\");\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(load, []);\n\n  // \"+\" 버튼 클릭 핸들러\n  const handleAddTodo = async (group) => {\n    try {\n      const newTitle = \"새 할 일\";\n      // const userId = group.todos[0]?.user_id;\n      // if (!userId) throw new Error(\"user_id를 찾을 수 없습니다.\");\n\n      await createTodo({\n        group_id: group.group_id,\n        title: newTitle,\n      });\n\n      // 생성되면 다시 불러오기\n      load();\n    } catch (err) {\n      console.error(err);\n      Alert.alert(\"오류\", \"TODO 생성 실패\");\n    }\n  };\n\n  if (loading) return <ActivityIndicator style={{ marginTop: 20 }} />;\n\n  if (groups.length === 0) {\n    return (\n      <TouchableOpacity style={styles.emptyContainer}\n        onPress={() => { navigation.navigate('GroupName') }}>\n        {/* <Text style={styles.emptyText}>\n          지금 터치해서 스터디 그룹을 만들어봐요!\n        </Text> */}\n        <Image\n          source={require(\"../assets/homeLogo.png\")}\n          style={styles.emptyImage}\n        />\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {groups.map((group) => {\n        const sec = group.timer_accumulated_sec;\n        const h = String(Math.floor(sec / 3600)).padStart(2, \"0\");\n        const m = String(Math.floor((sec % 3600) / 60)).padStart(2, \"0\");\n        const s = String(sec % 60).padStart(2, \"0\");\n        const timeString = `${h}:${m}:${s}`;\n\n        return (\n\n          <View key={group.group_id} style={styles.groupSection}>\n            <StudyTaskItem\n              subject={group.group_name}\n              time={timeString}\n              onPlusPress={() => handleAddTodo(group)}\n            />\n            {group.todos.map((todo) => (\n              <TodoList\n                key={todo.uid}\n                title={todo.title}\n                is_completed={todo.is_completed}\n                initialLiked={false}\n                memberColor={todo.user_color}\n              />\n            ))}\n          </View>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingTop: 20,\n  },\n  groupSection: {\n    marginBottom: 24,\n  },\n  emptyContainer: {\n    alignItems: \"center\",\n    paddingTop: 50,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: \"#666\",\n    marginBottom: 30,\n    textAlign: \"center\",\n  },\n  emptyImage: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n  },\n});\n","import React from \"react\";\nimport { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  container: {\n    //backgroundColor: COLORS.mint,\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignItems: 'center',    \n  },\n\n  profileBox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  circle: {\n    width: 60,\n    height: 60,\n    borderRadius : 30,\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: COLORS.mainColor,\n  },\n  image: {\n    width: 60,\n    height: 60,\n    resizeMode: 'cover',\n  },\n  profile: {\n    marginLeft: 16,\n  },\n  name: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n    color: '#000',\n    marginBottom: 2,\n  },\n  slogan: {\n    fontSize: 12,\n    fontFamily: fonts.regular,\n    color: '#000',\n  },\n\n  reactions: {\n\n  },\n  reaction: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  heart: {\n    width: 12,\n    height: 12,\n  },\n  reactionText: {\n    fontSize: 12,\n    fontFamily: fonts.semibold,\n    color: COLORS.charcoal,\n    marginLeft: 9,\n  },\n});","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Image, StyleSheet } from 'react-native';\nimport { styles } from './styles/Profile.styles';\nimport { fetchUserInfo } from \"../utils/api\";\n\nconst Profile = ({ style, likes = 3 }) => {\n  const [user, setUser] = useState({ name: \"\", slogan: \"\" });\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const data = await fetchUserInfo();\n        setUser({\n          name: data.nickname ?? \"사용자\",\n          slogan: data.slogan ?? \"당신의 슬로건을 적어보세요\",\n          profile_image: data.profile_image ?? \"\"\n        });\n      } catch (error) {\n        console.error(\"유저 정보 불러오기 실패:\", error);\n      }\n    };\n\n    loadUser();\n  }, []);\n  {\n    return (\n      <View style={[styles.container, style]}>\n        <View style={styles.profileBox}>\n          <View style={styles.circle}>\n            <Image\n              source={user.profile_image\n                ? { uri: `data:image/png;base64,${user.profile_image}` }\n                : require('../assets/icon.png')}\n              style={styles.image}\n            />\n          </View>\n          <View style={styles.profile}>\n            <Text style={styles.name}>{user.name}</Text>\n            <Text style={styles.slogan}>{user.slogan}</Text>\n          </View>\n        </View>\n\n        <View style={styles.reactions}>\n          <View style={[styles.reaction, { marginBottom: 4 }]}>\n            <Image source={require('../assets/불.png')} style={styles.fire} />\n            <Text style={styles.reactionText}>7</Text>\n          </View>\n          <View style={styles.reaction}>\n            <Image source={require('../assets/하트.png')} style={styles.heart} />\n            <Text style={styles.reactionText}>{likes}</Text>\n          </View>\n        </View>\n\n      </View>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport BottomNav from \"../components/BottomNav\";\nimport LessonSection from \"../components/LessonSection\";\nimport Profile from \"../components/Profile\";\nimport { fetchAccumulatedTime } from \"../utils/api\";\n\n// 날짜 → \"MM월 DD일 (요일)\"\nfunction formatHeaderDate(date = new Date()) {\n  const weekdays = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n  const MM = String(date.getMonth() + 1).padStart(2, \"0\");\n  const DD = String(date.getDate()).padStart(2, \"0\");\n  const wd = weekdays[date.getDay()];\n  return `${MM}월 ${DD}일 (${wd})`;\n}\n\nexport default function HomeScreen() {\n  const insets = useSafeAreaInsets();\n  const navigation = useNavigation();\n\n  const [accumulatedSeconds, setAccumulatedSeconds] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  // HH:MM:SS 포맷\n  const formatTime = (sec) => {\n    const h = Math.floor(sec / 3600);\n    const m = Math.floor((sec % 3600) / 60);\n    const s = sec % 60;\n    return [h, m, s].map(n => String(n).padStart(2, \"0\")).join(\":\");\n  };\n\n  // 오늘 날짜 YYYY-MM-DD\n  const getTodayDate = () => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const today = getTodayDate();\n        const res = await fetchAccumulatedTime(today);\n        const secs = res.data.accumulated_seconds ?? 0;\n        setAccumulatedSeconds(secs);\n      } catch (err) {\n        console.error(err);\n        setAccumulatedSeconds(0);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"#fff\", paddingTop: insets.top }}>\n      <View style={styles.timerSection}>\n        {/* 동적 날짜 */}\n        <Text style={styles.date}>{formatHeaderDate()}</Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"Timer\")}>\n          <Text style={styles.timer}>\n            {loading ? \"00:00:00\" : formatTime(accumulatedSeconds)}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView contentContainerStyle={styles.body}>\n        <Profile />\n        <LessonSection />\n      </ScrollView>\n\n      <BottomNav />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  timerSection: {\n    width: \"100%\",\n    height: 177,\n    backgroundColor: \"#F57353\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  date: {\n    color: \"#fff\",\n    fontSize: 14,\n    marginBottom: 5,\n  },\n  timer: {\n    color: \"#fff\",\n    fontSize: 36,\n    fontWeight: \"bold\",\n  },\n  body: {\n    padding: 20,\n  },\n});\n","// src/screens/TimerScreen.js\nimport React, { useEffect, useState, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Alert,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AnimatedCircularProgress } from \"react-native-circular-progress\";\nimport * as SecureStore from \"expo-secure-store\";\nimport api, { fetchAccumulatedTime } from \"../utils/api\"; // fetchAccumulatedTime 추가\n\nexport default function TimerScreen() {\n  const navigation = useNavigation();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsed, setElapsed] = useState(0);\n  const startRef = useRef(null);\n\n  const [groups, setGroups] = useState([]);\n  const [activeGroup, setActiveGroup] = useState(\"\");\n\n  // 오늘 날짜 (YYYY-MM-DD)\n  const today = new Date().toISOString().slice(0, 10);\n\n  // TOTAL에 표시할 누적 시간\n  const [totalAccum, setTotalAccum] = useState(0);\n\n  // 1초마다 elapsed 업데이트\n  useEffect(() => {\n    let id;\n    if (isRunning) {\n      id = setInterval(() => setElapsed((prev) => prev + 1), 1000);\n    }\n    return () => clearInterval(id);\n  }, [isRunning]);\n\n  // 초기 그룹 & 타이머 로드\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await SecureStore.getItemAsync(\"accessToken\");\n        const userId = await SecureStore.getItemAsync(\"userId\");\n        if (!token || !userId) throw new Error(\"로그인 정보 없음\");\n\n        // 그룹 조회\n        const { data: groupsData } = await api.get(`/group?user_id=${userId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setGroups(groupsData);\n        const firstId = groupsData[0]?.group_id || \"\";\n        setActiveGroup(firstId);\n      } catch (e) {\n        console.error(e);\n        Alert.alert(\"오류\", \"초기 그룹 로드 실패\");\n      }\n    })();\n  }, []);\n\n  // activeGroup 변경 시: 타이머 & TOTAL 동시 로드\n  useEffect(() => {\n    if (!activeGroup) return;\n    (async () => {\n      const token = await SecureStore.getItemAsync(\"accessToken\");\n\n      // 1) 개별 그룹 타이머 정보\n      try {\n        const { data } = await api.get(\n          `/timers?group_id=${activeGroup}&date=${today}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n        const { accumulated_sec, is_running, started_at } = data;\n\n        if (is_running && started_at) {\n          const startMs = new Date(started_at).getTime();\n          const diffSec = Math.floor((Date.now() - startMs) / 1000);\n          setElapsed(accumulated_sec + diffSec);\n          startRef.current = startMs;\n          setIsRunning(true);\n        } else {\n          setElapsed(accumulated_sec || 0);\n          startRef.current = null;\n          setIsRunning(false);\n        }\n      } catch (err) {\n        console.error(\"타이머 로드 실패:\", err);\n        Alert.alert(\"오류\", \"타이머 정보를 불러오지 못했습니다.\");\n      }\n\n      // 2) 그룹 전체 누적 시간 (TOTAL)\n      try {\n        const res = await fetchAccumulatedTime(today);\n        setTotalAccum(res.data.accumulated_seconds || 0);\n      } catch (err) {\n        console.error(\"TOTAL 조회 실패:\", err);\n        setTotalAccum(0);\n      }\n    })();\n  }, [activeGroup]);\n\n  // 낙관적 UI 시작\n  async function handleStart() {\n    setIsRunning(true);\n    startRef.current = Date.now();\n    try {\n      const token = await SecureStore.getItemAsync(\"accessToken\");\n      await api.post(\n        `/timers/${activeGroup}/start`,\n        {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n    } catch (err) {\n      console.error(\"시작 실패:\", err);\n      setIsRunning(false);\n      Alert.alert(\"오류\", \"타이머 시작에 실패했습니다.\");\n    }\n  }\n\n  // 낙관적 UI 중지\n  async function handleStop() {\n    setIsRunning(false);\n    try {\n      const token = await SecureStore.getItemAsync(\"accessToken\");\n      const { data } = await api.post(\n        `/timers/${activeGroup}/stop`,\n        {},\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setElapsed(data.accumulated_sec || 0);\n    } catch (err) {\n      console.error(\"중지 실패:\", err);\n      setIsRunning(true);\n      Alert.alert(\"오류\", \"타이머 중지에 실패했습니다.\");\n    }\n  }\n\n  const onToggle = () => (isRunning ? handleStop() : handleStart());\n\n  // HH:MM:SS 포맷\n  const formatTime = (sec) => {\n    const s = sec || 0;\n    const h = String(Math.floor(s / 3600)).padStart(2, \"0\");\n    const m = String(Math.floor((s % 3600) / 60)).padStart(2, \"0\");\n    const ss = String(s % 60).padStart(2, \"0\");\n    return `${h}:${m}:${ss}`;\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Close 버튼 */}\n      <TouchableOpacity\n        style={styles.closeButton}\n        onPress={() => navigation.navigate(\"Home\")}\n      >\n        <Ionicons name=\"close\" size={28} color=\"#fff\" />\n      </TouchableOpacity>\n\n      {/* 그룹 칩 */}\n      <ScrollView\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.chipContainer}\n      >\n        {groups.map((g) => (\n          <TouchableOpacity\n            key={g.group_id}\n            style={[\n              styles.chip,\n              activeGroup === g.group_id && styles.chipActive,\n            ]}\n            onPress={() => setActiveGroup(g.group_id)}\n          >\n            <Text\n              style={[\n                styles.chipText,\n                activeGroup === g.group_id && styles.chipTextActive,\n              ]}\n            >\n              {g.name}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n\n      {/* 타이머 */}\n      <View style={styles.timerWrapper}>\n        <AnimatedCircularProgress\n          size={328}\n          width={10}\n          fill={((elapsed % 3600) / 3600) * 100}\n          tintColor=\"#FFFFFF\"\n          backgroundColor=\"#3275CD\"\n          rotation={0}\n          lineCap=\"square\"\n        >\n          {() => (\n            <View style={styles.timerTextWrapper}>\n              <Text style={styles.timerLabel}>TIMER</Text>\n              <Text style={styles.timerValue}>{formatTime(elapsed)}</Text>\n              <Text style={styles.totalLabel}>TOTAL</Text>\n              <Text style={styles.totalTime}>{formatTime(totalAccum)}</Text>\n            </View>\n          )}\n        </AnimatedCircularProgress>\n      </View>\n\n      {/* Play/Pause */}\n      <TouchableOpacity style={styles.pauseButton} onPress={onToggle}>\n        <Ionicons name={isRunning ? \"pause\" : \"play\"} size={28} color=\"#333\" />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#5399F5\",\n    paddingTop: 47,\n    // justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n  closeButton: { position: \"absolute\", top: 65, left: 31, zIndex: 10 },\n  chipContainer: {\n    height: 36,\n    flexDirection: \"row\",\n    paddingHorizontal: 40,\n    marginTop: 92,\n    marginBottom: 80,\n    alignSelf: \"center\",\n  },\n  chip: {\n    borderColor: \"#fff\",\n    borderWidth: 1,\n    paddingHorizontal: 12,\n    paddingVertical: 9,\n    borderRadius: 27,\n    marginHorizontal: 8,\n  },\n  chipActive: { backgroundColor: \"#fff\" },\n  chipText: { color: \"#fff\", fontSize: 14 },\n  chipTextActive: { color: \"#000\", fontWeight: \"400\" },\n  timerWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // marginTop: 10,\n    marginBottom: 10\n  },\n  timerTextWrapper: { alignItems: \"center\" },\n  timerLabel: { color: \"#fff\", fontSize: 16, marginBottom: 6 },\n  timerValue: { color: \"#fff\", fontSize: 50, fontWeight: \"500\" },\n  totalLabel: { color: \"#3275CD\", marginTop: 36, fontSize: 10 },\n  totalTime: { color: \"#3275CD\", fontSize: 26 },\n  pauseButton: {\n    marginTop: 52,\n    backgroundColor: \"#fff\",\n    padding: 20,\n    borderRadius: 40,\n    marginBottom: 90\n  },\n});\n","import React from \"react\";\nimport { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 31,\n  },\n  today: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  text: {\n    fontSize: 17,\n    fontFamily: fonts.semibold,\n  },\n  info: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  Box: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 0.5,\n    borderColor: COLORS.line,\n    borderRadius: 13,\n    paddingHorizontal: 23,\n    paddingVertical: 16,\n  },\n  image: {\n    width: 15,\n    height: 20,\n    resizeMode: 'contain',\n  },\n  rankText: {\n    fontSize: 15,\n    fontFamily: fonts.semibold,\n  },\n  code: {\n    fontSize: 16,\n    fontFamily: fonts.bold,\n  },\n  memberBox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 30,\n    paddingLeft: 31,\n  },\n  count: {\n    fontSize: 16,\n    fontFamily: fonts.semibold,\n    lineHeight: 22,\n    textAlign: 'left',\n  },\n  line: {\n    borderWidth: 0.5,\n    borderColor: COLORS.line,\n    marginVertical: 15,\n  }\n});","import React from \"react\";\nimport { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    gap: 8,\n    paddingTop: 70,\n    paddingLeft: 31,\n    paddingBottom: 30,\n  },\n  groupButton: {\n    paddingHorizontal: 14,\n    paddingVertical: 10,\n    borderRadius: 27,\n  },\n  groupText: {\n    fontSize: 14,\n    color: '#000',\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, StyleSheet } from 'react-native';\nimport { styles } from './styles/SubjectList.styles';\nimport { COLORS } from '../constants/colors';\n\nconst SubjectList = ({ groups, selectedGroupId, onSelectGroup }) => {\n  return (\n    <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n      <View style={styles.container}>\n        {groups.map(group => {\n          const isSelected = group.group_id === selectedGroupId;\n          return (\n            <TouchableOpacity\n              key={group.group_id}\n              onPress={() => onSelectGroup(group.group_id)}\n              style={[\n                styles.groupButton,\n                {\n                  backgroundColor: isSelected ? group.color : COLORS.line,\n                },\n              ]}\n            >\n              <Text style={[styles.groupText, isSelected && { color: '#fff' }]}>\n                {group.name}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default SubjectList;\n","import React from \"react\";\nimport { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 2,\n    marginVertical: 16,\n  },\n  column: {\n    alignItems: 'center',\n  },\n  dayText: {\n    fontSize: 14,\n    fontFamily: fonts.regular,\n  },\n  star: {\n    width: 43,\n    height: 44,\n    marginVertical: 4,\n    resizeMode: 'contain',\n  },\n  dateText: {\n    fontSize: 12,\n    color: '#000',\n  },\n});","import React from 'react';\nimport { View, Text, Image, StyleSheet } from 'react-native';\nimport { styles } from './styles/WeeklyStars.styles';\n\nconst daysKor = ['일', '월', '화', '수', '목', '금', '토'];\nconst colors = ['#F57373', '#111', '#111', '#111', '#111', '#111', '#6B9EFF']; // 일~토 텍스트 색\n\nexport default function WeeklyStars() {\n  const today = new Date();\n  const todayDay = today.getDay(); // 요일 (0:일, 6:토)\n\n  // 이번 주 일요일부터 시작하는 날짜 배열 생성\n  const startOfWeek = new Date(today);\n  startOfWeek.setDate(today.getDate() - todayDay);\n\n  const weekDates = Array.from({ length: 7 }, (_, i) => {\n    const d = new Date(startOfWeek);\n    d.setDate(d.getDate() + i);\n    return d;\n  });\n\n  return (\n    <View style={styles.row}>\n      {weekDates.map((date, idx) => (\n        <View key={idx} style={styles.column}>\n          <Text style={[styles.dayText, { color: colors[date.getDay()] }]}>\n            {daysKor[date.getDay()]}\n          </Text>\n          <Image\n            source={require('../assets/star_empty.png')}\n            style={styles.star}\n          />\n          <Text style={styles.dateText}>{date.getDate()}</Text>\n        </View>\n      ))}\n    </View>\n  );\n}\n","import React from 'react';\nimport Svg, { Defs, RadialGradient, Stop, Ellipse } from 'react-native-svg';\n\nexport default function DividerShadow() {\n  return (\n    <Svg width=\"100%\" height=\"30\">\n      <Defs>\n        <RadialGradient\n          id=\"shadow\"\n          cx=\"50%\" cy=\"40%\" r=\"80%\"\n          fx=\"50%\" fy=\"0%\"\n        >\n          <Stop offset=\"0%\" stopColor=\"#ccc\" stopOpacity=\"0.3\" />\n          <Stop offset=\"100%\" stopColor=\"#fff\" stopOpacity=\"0\" />\n        </RadialGradient>\n      </Defs>\n\n      <Ellipse\n        cx=\"50%\"\n        cy=\"0\"\n        rx=\"150\"\n        ry=\"20\"\n        fill=\"url(#shadow)\"\n      />\n    </Svg>\n  );\n}\n","import React from 'react';\nimport { View, Text, Image, StyleSheet } from 'react-native';\nimport { COLORS } from '../constants/colors';\nimport { fonts } from '../constants/fonts';\n\nexport default function GroupMemberItem({ name, color, image }) {\n  return (\n    <View style={styles.container}>\n      <View style={[styles.avatarWrapper, { borderColor: color }]}>\n        <Image\n          source={{ uri: image }}\n          style={styles.avatar}\n        />\n      </View>\n      <Text style={styles.name}>{name}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginHorizontal: 7,\n  },\n  avatarWrapper: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#F8F8F8',\n  },\n  name: {\n    marginTop: 5,\n    fontSize: 12,\n    fontFamily: fonts.regular,\n    color: '#000',\n  },\n});\n","import React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport GroupMemberItem from './GroupMemberItem';\n\nexport default function GroupMemberList({ members }) {\n  return (\n    <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scroll}>\n      {members.map((member) => (\n        <GroupMemberItem\n          key={member.uid}\n          name={member.nickname}\n          color={member.color}\n          image={member.profileImage}\n        />\n      ))}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scroll: {\n    paddingLeft: 20,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F1F1F1',\n    paddingHorizontal: 13,\n    paddingVertical: 7,\n    borderRadius: 999,\n    alignSelf: 'flex-start',\n    marginBottom: 6,\n  },\n  name: {\n    fontSize: 13,\n    fontFamily: fonts.medium,\n    color: '#000',\n  },\n  plusIcon: {\n    width: 18,\n    height: 18,\n    resizeMode: 'contain',\n    marginLeft: 6,\n  },\n});","import React from 'react';\nimport { View, Text, Image } from 'react-native';\nimport { styles } from './styles/NameTag.styles';\n\nexport default function NameTag({ name, showPlus = true }) {\n  return (\n    <View style={[\n        styles.container\n      ]}>\n      <Text style={styles.name}>{name}</Text>\n      {showPlus && (\n        <Image\n          source={require('../assets/plus.png')}\n          style={styles.plusIcon}\n        />\n      )}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { styles } from './styles/Group.styles';\nimport TodoList from '../components/TodoList';\nimport SubjectList from '../components/SubjectList';\nimport WeeklyStars from '../components/WeeklyStars';\nimport DividingLine from '../components/dividingLine';\nimport GroupMemberList from '../components/GroupMemberList';\nimport NameTag from '../components/NameTag';\nimport BottomNav from \"../components/BottomNav\";\nimport { useNavigation } from '@react-navigation/native';\nimport { fetchGroupsByUser, fetchGroupDetail, fetchTodosByGroup } from '../utils/api';\nimport { USER_ID } from \"@env\";\n\n// TODO: 출석 별 채우기, todo 수정, 삭제, 하트 유지 \n\nexport default function GroupScreen() {\n  const userId = USER_ID;\n  const navigation = useNavigation();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n\n  useEffect(() => {\n    const loadGroups = async () => {\n      try {\n        const data = await fetchGroupsByUser(userId);\n        setGroups(data);\n\n        // 첫 번째 그룹을 선택된 그룹으로 설정\n        if (data.length > 0) {\n          setSelectedGroupId(data[0].group_id);\n        }\n      } catch (error) {\n        if (error.response?.status === 404) {\n          console.warn(\"✅ 그룹 없음: 유저는 있지만 그룹 없음\");\n          setGroups([]); // 빈 상태로 렌더링\n        } else {\n          console.error(\"❌ 그룹 불러오기 실패:\", error);\n        }\n      }\n    };\n\n    loadGroups();\n  }, []);\n\n  const [groupDetail, setGroupDetail] = useState(null);\n  const myNickname = groupDetail?.members?.find(m => m.uid === userId)?.nickname ?? '나';\n\n  // 그룹 선택 시 상세 정보 로딩\n  useEffect(() => {\n    const loadGroupDetail = async () => {\n      if (!selectedGroupId) return;\n      console.log(\"📡 요청할 group_id:\", selectedGroupId);\n      try {\n        const data = await fetchGroupDetail(selectedGroupId);\n        console.log(\"✅ 받아온 groupDetail:\", data);\n        setGroupDetail(data);\n      } catch (error) {\n        console.error('❌ 그룹 상세 정보 불러오기 실패:', error);\n      }\n    };\n\n    loadGroupDetail();\n  }, [selectedGroupId]);\n\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      if (!selectedGroupId) return;\n\n      try {\n        const res = await fetchTodosByGroup(selectedGroupId);\n        setTodos(res.data); // 모든 멤버의 투두를 저장\n      } catch (error) {\n        console.error(\"투두 불러오기 실패:\", error);\n      }\n    };\n\n    loadTodos();\n  }, [selectedGroupId]);\n\n  const myTodos = todos.filter(todo => todo.user_id === userId);\n  const otherTodosMap = {};\n\n  todos.forEach(todo => {\n    if (todo.user_id !== userId) {\n      if (!otherTodosMap[todo.user_id]) {\n        otherTodosMap[todo.user_id] = {\n          user_id: todo.user_id,\n          nickname: todo.user?.nickname ?? '이름 없음',\n          color: todo.user_color,\n          todos: [],\n        };\n      }\n      otherTodosMap[todo.user_id].todos.push(todo);\n    }\n  });\n\n  const otherMembers = Object.values(otherTodosMap);\n\n  const [now] = useState(new Date());\n  const days = ['일', '월', '화', '수', '목', '금', '토'];\n  const formattedDate = `${now.getFullYear()}년 ${now.getMonth() + 1}월 ${now.getDate()}일 (${days[now.getDay()]})`;\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"#fff\" }}>\n      <ScrollView style={{ backgroundColor: '#fff' }}>\n        <SubjectList\n          groups={groups}\n          selectedGroupId={selectedGroupId}\n          onSelectGroup={setSelectedGroupId}\n        />\n        <View style={styles.container}>\n          <View style={styles.today}>\n            <Text style={styles.text}>{formattedDate}</Text>\n            <Text style={styles.text}>01:07:40</Text>\n          </View>\n          <WeeklyStars />\n          <DividingLine />\n          <View style={styles.info}>\n            <TouchableOpacity\n              style={[styles.Box, { gap: 9 }]}\n              onPress={() => navigation.navigate('Rank')}\n            >\n              <Image source={require('../assets/불.png')} style={styles.image} />\n              <Text style={styles.rankText}>현재 그룹 순위는?</Text>\n            </TouchableOpacity>\n            <View style={[styles.Box, { gap: 14 }]}>\n              <Text>그룹코드</Text>\n              <Text style={styles.code}>\n                {groupDetail?.secret_code ?? '그룹 없음'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.memberBox}>\n          <Text style={styles.count}>\n            {groupDetail?.attendance_count ?? 0}일 연속 채움중{\"\\n\"}오늘도 파이팅!\n          </Text>\n          <GroupMemberList members={groupDetail?.members ?? []} />\n        </View>\n        <View style={styles.container}>\n          <NameTag name={myNickname} />\n          {myTodos.map(todo => (\n            <TodoList\n              key={todo.uid}\n              title={todo.title}\n              is_completed={todo.is_completed}\n              memberColor={todo.user_color}\n            />\n          ))}\n\n          <View style={styles.line} />\n\n          {otherMembers.map(member => (\n            <View key={member.user_id}>\n              <NameTag name={member.nickname} showPlus={false} />\n              {member.todos.map(todo => (\n                <TodoList\n                  key={todo.uid}\n                  title={todo.title}\n                  is_completed={todo.is_completed}\n                  memberColor={member.color}\n                />\n              ))}\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n      <BottomNav />\n    </View>\n  );\n}","import React from \"react\";\nimport { StyleSheet } from 'react-native';\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 31,\n  },\n  rank: {\n    backgroundColor: COLORS.mainColor,\n    height: 380,\n    overflow: 'hidden',\n  },\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  arrow: {\n    width: 28,\n    height: 28,\n    resizeMode: 'contain',\n  },\n  week: {\n    position: 'absolute',\n    left: '27%',\n  },\n  weekImg: {\n    width: 160,\n    resizeMode: 'contain',\n  },\n\n  groupContainer: {\n    position: 'absolute',\n    alignItems: 'center'\n  },\n  first: {\n    bottom: -240,\n    left: -40,\n    zIndex: 3,\n  },\n  second: {\n    bottom: -220,\n    right: 18,\n  },\n  third: {\n    bottom: -220,\n    left: 18,\n  },\n\n  groupName: {\n    backgroundColor: '#fff',\n\n    borderRadius: 27,\n    fontWeight: '600',\n  },\n  oneText: {\n    left: -1,\n    fontSize: 14,\n    marginBottom: 18,\n    paddingHorizontal: 12,\n    paddingVertical: 9,\n  },\n  Text: {\n    fontSize: 11,\n    marginBottom: 14,\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n  },\n  twoText: {\n    right: '33',\n  },\n  threeText: {\n    left: '33',\n  },\n  trophyImg: {\n    height: 350,\n    resizeMode: 'contain',\n  },\n  one: {\n    height: 405,\n    resizeMode: 'contain',\n  },\n\n  toggle: {\n    flexDirection: 'row',\n    gap: 15,\n    marginTop: 30,\n  },\n  activeTab: {\n    fontFamily: fonts.semibold,\n    color: COLORS.charcoal,\n  },\n  inactiveTab: {\n    fontFamily: fonts.semibold,\n    color: COLORS.deactivate,\n  },\n  groupItem: {\n    fontSize: 16,\n    marginVertical: 4,\n  },\n  underline: {\n    marginTop: 4,\n    height: 3,\n    width: 52,\n    backgroundColor: COLORS.mainColor,\n  },\n\n  rankList: {\n    marginTop: 30,\n  },\n  groupRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 25,\n  },\n  ranking: {\n    width: 40,\n    textAlign: 'center',\n    fontSize: 17,\n    fontFamily: fonts.semibold,\n    color: COLORS.mainColor,\n  },\n  groupItem: {\n    width: 275,\n    textAlign: 'left',\n    fontSize: 16,\n    color: COLORS.charcoal,\n    paddingLeft: 30,\n  },\n  attendance: {\n    width: 13,\n    resizeMode: 'contain',\n  },\n  attendanceText: {\n    width: 25,\n    textAlign: 'center',\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n    color: COLORS.charcoal,\n  },\n});","import React, { useEffect, useState } from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, Image, Pressable } from 'react-native';\nimport { styles } from './styles/Rank.styles';\nimport { useNavigation } from \"@react-navigation/native\";\nimport BottomNav from \"../components/BottomNav\";\nimport { fetchAllGroupRankings, fetchMyGroupRankings } from '../utils/api';\n\nexport default function RankScreen() {\n  const navigation = useNavigation();\n  const [showAll, setShowAll] = useState(true);\n  const [top3Groups, setTop3Groups] = useState([]);\n  const [allGroups, setAllGroups] = useState([]);\n  const [myGroups, setMyGroups] = useState([]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const all = await fetchAllGroupRankings();\n        const allWithRank = all.map((group, idx) => ({\n          ...group,\n          rank: idx + 1,\n        }));\n        const mine = await fetchMyGroupRankings();\n\n        setAllGroups(allWithRank);\n        setMyGroups(mine);\n        setTop3Groups(allWithRank.slice(0, 3));\n      } catch (e) {\n        console.error(\"랭킹 데이터 오류:\", e);\n      }\n    };\n    loadData();\n  }, []);\n\n  const myGroupsWithRank = myGroups.map(myGroup => {\n    const found = allGroups.find(g => g.group_id == myGroup.group_id);\n    return {\n      ...myGroup,\n      rank: found?.rank ?? null,\n    };\n  });\n\n  const visibleGroups = showAll ? allGroups : myGroupsWithRank;\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"#fff\" }}>\n      <View style={[styles.container, styles.rank, {\n        paddingTop: 70\n      }]}>\n        <View style={styles.appbar}>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Image source={require('../assets/arrow.png')} style={styles.arrow} />\n          </TouchableOpacity>\n          <View style={styles.week}>\n            <Image source={require('../assets/week.png')} style={styles.weekImg} />\n          </View>\n        </View>\n        {top3Groups[0] && (\n          <View style={[styles.groupContainer, styles.first]}>\n            <Text style={[styles.groupName, styles.oneText]}>\n              🥇 {top3Groups[0].group_name}\n            </Text>\n            <Image source={require('../assets/1등.png')} style={[styles.trophyImg, styles.one]} />\n          </View>\n        )}\n\n        {/* 2등 */}\n        {top3Groups[1] && (\n          <View style={[styles.groupContainer, styles.second]}>\n            <Text style={[styles.groupName, styles.twoText, styles.Text]}>\n              🥈 {top3Groups[1].group_name}\n            </Text>\n            <Image source={require('../assets/2등.png')} style={styles.trophyImg} />\n          </View>\n        )}\n\n        {/* 3등 */}\n        {top3Groups[2] && (\n          <View style={[styles.groupContainer, styles.third]}>\n            <Text style={[styles.groupName, styles.threeText, styles.Text]}>\n              🥉 {top3Groups[2].group_name}\n            </Text>\n            <Image source={require('../assets/3등.png')} style={styles.trophyImg} />\n          </View>\n        )}\n      </View>\n\n      {/* 그룹 목록 */}\n      <View style={[styles.container, styles.toggle]}>\n        <Pressable onPress={() => setShowAll(true)}>\n          <Text style={showAll ? styles.activeTab : styles.inactiveTab}>전체그룹</Text>\n          {showAll && <View style={styles.underline} />}\n        </Pressable>\n        <Pressable onPress={() => setShowAll(false)}>\n          <Text style={!showAll ? styles.activeTab : styles.inactiveTab}>내 그룹만</Text>\n          {!showAll && <View style={styles.underline} />}\n        </Pressable>\n      </View>\n\n      <ScrollView style={[styles.container, styles.rankList]}>\n        {visibleGroups.map((group) => (\n          <View key={group.group_id} style={styles.groupRow}>\n            <Text style={styles.ranking}>{group.rank ?? '-'}</Text>\n            <Text style={styles.groupItem}>{group.group_name}</Text>\n            <Image source={require('../assets/불.png')} style={styles.attendance} />\n            <Text style={styles.attendanceText}>{group.attendance_count}</Text>\n          </View>\n        ))}\n      </ScrollView>\n\n      <BottomNav />\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, handleNext } from \"react-native\";\nimport { fonts } from '../constants/fonts';\nimport InputField from \"../components/InputField\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function GroupNameScreen() {\n  const [name, setName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigation = useNavigation();\n\n  const handleNext = () => {\n    navigation.navigate('GroupColor', { name });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>그룹 만들기 step 1</Text>\n      <Text style={styles.label}>그룹 이름이 무엇인가요?</Text>\n      <InputField\n        value={name}\n        onChangeText={setName}\n        placeholder=\"눌러서 작성하기\"\n      />\n      <NextButton\n        title={isLoading ? \"저장 중...\" : \"결정 완료\"}\n        disabled={!name || isLoading}\n        onPress={handleNext}\n        style={styles.btn}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 31,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    marginVertical: 55,\n    fontSize: 14,\n    fontFamily: fonts.medium,\n    color: \"#7A7A7A\"\n  },\n  label: {\n    fontSize: 16,\n    fontFamily: fonts.medium,\n    marginBottom: 20,\n  },\n  btn: { marginTop: 312 },\n});","import React from \"react\";\nimport { View, TouchableOpacity, StyleSheet } from \"react-native\";\nimport CheckIcon from \"../assets/check.svg\";\n\nexport default function ColorPicker({ colors, selectedColor, onSelect }) {\n  return (\n    <View style={styles.container}>\n      {colors.map((color, idx) => (\n        <TouchableOpacity\n          key={idx}\n          style={[styles.colorCircle, { backgroundColor: color }]}\n          onPress={() => onSelect(color)}\n        >\n          {selectedColor === color && (\n            <CheckIcon width={16} height={16} />\n          )}\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    gap: 14,\n  },\n  colorCircle: {\n    width: 43,\n    height: 43,\n    borderRadius: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React, { useState } from \"react\";\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { fonts } from '../constants/fonts';\nimport ColorPicker from \"../components/ColorPicker\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\nimport { postGroup } from \"../utils/api\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst GROUP_COLORS = [\n  \"#F45D48\", \"#FDB147\", \"#D1A15C\", \"#36B84C\",\n  \"#C26BFF\", \"#3A46BF\", \"#DE5D5D\", \"#FDE14C\",\n  \"#B9CF3A\", \"#64D8B1\", \"#FCA8F2\", \"#5CA5F9\"\n];\n\nexport default function GroupColorScreen() {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const { name: groupName } = route.params;\n\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleNext = async () => {\n    try {\n      await postGroup({ name: groupName, color: selectedColor });\n      navigation.navigate('Group')\n    } catch (err) {\n      console.log(\"그룹 생성 실패! : \", err);\n    }\n\n  };\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>그룹 만들기 step 2</Text>\n      <Text style={styles.label}>어울리는 색을 골라주세요!</Text>\n\n      <ColorPicker\n        colors={GROUP_COLORS}\n        selectedColor={selectedColor}\n        onSelect={setSelectedColor}\n      />\n      <TouchableOpacity\n        style={[styles.button, !selectedColor && styles.buttonDisabled]}\n        disabled={!selectedColor}\n        onPress={handleNext}\n      >\n      </TouchableOpacity>\n\n      <NextButton\n        title={isLoading ? \"저장 중...\" : \"선택 완료\"}\n        disabled={!groupName || isLoading}\n        onPress={handleNext}\n        style={styles.btn}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 31,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    marginVertical: 55,\n    fontSize: 14,\n    fontFamily: fonts.medium,\n    color: \"#7A7A7A\"\n  },\n  label: {\n    fontSize: 16,\n    fontFamily: fonts.medium,\n    marginBottom: 32,\n  },\n  btn: { marginTop: 312 },\n});","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { fonts } from '../constants/fonts';\nimport ColorPicker from \"../components/ColorPicker\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\nimport { COLORS } from \"../constants/colors\";\nimport { useNavigation } from '@react-navigation/native';\n\nconst mockGroup = {\n  name: \"응용과 개발\",\n  code: \"A3B7D2\",\n  color: \"#5CA5F9\",\n};\n\nexport default function GroupCompleteScreen() {\n  const navigation = useNavigation();\n  const [selectedColor, setSelectedColor] = useState(null);\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>그룹 만들기 step 3</Text>\n      <Text style={styles.label}>그룹이 만들어 졌어요!</Text>\n\n      <View style={styles.GroupBox}>\n        <View style={[styles.Group, { backgroundColor: mockGroup.color }]}>\n          <Text style={styles.groupName}>{mockGroup.name}</Text>\n        </View>\n        <View style={styles.code}>\n          <Text style={styles.codeText}>그룹코드</Text>\n          <Text style={styles.GroupCode}>{mockGroup.code}</Text>\n        </View>\n      </View>\n\n      <Image source={require('../assets/GroupLogo.png')} style={styles.LogoImg} onPress={() => navigation.navigate('Home')} />\n      <TouchableOpacity style={styles.btn}>\n        <Text style={styles.btnText}>채움 시작하기</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.reset} onPress={() => navigation.navigate('GroupName')}>\n        <Text style={styles.resetText}>처음부터 다시 만들고 싶어요</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 31,\n    backgroundColor: \"#fff\",\n  },\n  title: {\n    marginVertical: 55,\n    fontSize: 14,\n    fontFamily: fonts.medium,\n    color: \"#7A7A7A\"\n  },\n  label: {\n    fontSize: 16,\n    fontFamily: fonts.medium,\n    marginBottom: 32,\n  },\n\n  GroupBox: {\n    backgroundColor: \"#fff\",\n    width: 328,\n    height: 157,\n    borderWidth: 0.1,\n    borderRadius: 4,\n    borderColor: COLORS.deactivate,\n    shadowColor: \"#000\",\n    shadowOpacity: 0.08,\n    shadowRadius: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  Group: {\n    borderRadius: 27,\n    paddingHorizontal: 12,\n    paddingVertical: 9,\n  },\n  groupName: {\n    color: \"#fff\",\n    fontSize: 14.4,\n    fontFamily: fonts.regular,\n  },\n  code: {\n    flexDirection: 'row',\n    marginTop: 16,\n    gap: 16,\n    alignItems: \"center\",\n  },\n  codeText: {\n    fontSize: 10,\n    fontFamily: fonts.regular,\n  },\n  GroupCode: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n\n  LogoImg: {\n    width: 276,\n    height: 142,\n    resizeMode: 'contain',\n    marginTop: 64,\n  },\n\n  btn: {\n    width: 328,\n    height: 61,\n    borderRadius: 30,\n    backgroundColor: COLORS.mainColor,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  btnText: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontFamily: fonts.regular,\n    color: \"#fff\",\n  },\n  reset: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n  },\n  resetText: {\n    fontSize: 14,\n    fontFamily: fonts.regular,\n    color: COLORS.deactivate,\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Image, StyleSheet, Alert } from \"react-native\";\nimport { fonts } from '../constants/fonts';\nimport InputField from \"../components/InputField\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\n\nexport default function GroupJoin1Screen() {\n  const [name, setName] = useState(\"\");\n  \n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>그룹 입장하기 step 1</Text>\n      <Text style={styles.label}>친구에게 받은 그룹 코드를 입력해 주세요!</Text>\n      <InputField\n        value={name}\n        onChangeText={setName}\n        placeholder=\"눌러서 작성하기\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 31,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    marginVertical: 55,\n    fontSize: 14,\n    fontFamily: fonts.medium,\n    color: \"#7A7A7A\"\n  },\n  label: {\n    fontSize: 16,\n    fontFamily: fonts.medium,\n    marginBottom: 20,\n  },\n});","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { fonts } from '../constants/fonts';\nimport ColorPicker from \"../components/ColorPicker\";\nimport NextButton from \"../components/NextButton\";\nimport Header from \"../components/Header\";\nimport { COLORS } from \"../constants/colors\";\nimport { useNavigation } from '@react-navigation/native';\nimport GroupMemberList from \"../components/GroupMemberList\";\n\nconst mockGroup = {\n  name: \"응용과 개발\",\n  code: \"A3B7D2\",\n  color: \"#5CA5F9\",\n};\n\nexport default function GroupJoin2Screen() {\n  const navigation = useNavigation();\n  const [selectedColor, setSelectedColor] = useState(null);\n\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Text style={styles.title}>그룹 입장하기 step 2</Text>\n      <Text style={styles.label}>참여하려는 그룹이 맞나요?</Text>\n\n      <View style={styles.GroupBox}>\n        <View style={[styles.Group, { backgroundColor: mockGroup.color }]}>\n          <Text style={styles.groupName}>{mockGroup.name}</Text>\n        </View>\n        <View style={styles.code}>\n          <Text style={styles.codeText}>그룹코드</Text>\n          <Text style={styles.GroupCode}>{mockGroup.code}</Text>\n        </View>\n        <GroupMemberList />\n      </View>\n\n      <TouchableOpacity style={styles.btn} onPress={() => navigation.navigate('Group')}>\n        <Text style={styles.btnText}>채움 시작하기</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.reset} onPress={() => navigation.navigate('GroupJoin1')}>\n        <Text style={styles.resetText}>아니요 이 그룹이 아니에요</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 31,\n    backgroundColor: \"#fff\",\n  },\n  title: {\n    marginVertical: 55,\n    fontSize: 14,\n    fontFamily: fonts.medium,\n    color: \"#7A7A7A\"\n  },\n  label: {\n    fontSize: 16,\n    fontFamily: fonts.medium,\n    marginBottom: 32,\n  },\n\n  GroupBox: {\n    backgroundColor: \"#fff\",\n    width: 328,\n    height: 157,\n    borderWidth: 0.1,\n    borderRadius: 4,\n    borderColor: COLORS.deactivate,\n    shadowColor: \"#000\",\n    shadowOpacity: 0.08,\n    shadowRadius: 2,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  Group: {\n    borderRadius: 27,\n    paddingHorizontal: 12,\n    paddingVertical: 9,\n  },\n  groupName: {\n    color: \"#fff\",\n    fontSize: 14.4,\n    fontFamily: fonts.regular,\n  },\n  code: {\n    flexDirection: 'row',\n    marginTop: 16,\n    gap: 16,\n    alignItems: \"center\",\n  },\n  codeText: {\n    fontSize: 10,\n    fontFamily: fonts.regular,\n  },\n  GroupCode: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n\n  btn: {\n    width: 328,\n    height: 61,\n    borderRadius: 30,\n    backgroundColor: COLORS.mainColor,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 92,\n  },\n  btnText: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontFamily: fonts.regular,\n    color: \"#fff\",\n  },\n  reset: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n  },\n  resetText: {\n    fontSize: 14,\n    fontFamily: fonts.regular,\n    color: COLORS.deactivate,\n  },\n});\n","import { StyleSheet } from \"react-native\";\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  LogoBox: {\n    position: 'absolute',\n    top: 87,\n    left: 0,\n    right: 0,\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  Logo: {\n    width: 328,\n    height: 175,\n    resizeMode: 'contain',\n  },\n\n  profileBox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 125,\n    marginLeft: 8,\n  },\n  circle: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: COLORS.mainColor,\n  },\n  image: {\n    width: 60,\n    height: 60,\n    resizeMode: 'cover',\n  },\n  profile: {\n    marginLeft: 16,\n  },\n  name: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n    marginBottom: 2,\n  },\n  slogan: {\n    fontSize: 12,\n    fontFamily: fonts.regular,\n  },\n\n  reactionBox: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 23,\n    zIndex: 2,\n  },\n  reactions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    borderWidth: 0.5,\n    borderColor: COLORS.line,\n    borderRadius: 12,\n    paddingHorizontal: 25,\n    paddingVertical: 14,\n\n    gap: 9,\n    backgroundColor: '#fff',\n  },\n  reactionImg: {\n    height: 16,\n    resizeMode: 'contain',\n  },\n  reactionText: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  tagContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  tag: {\n    paddingHorizontal: 10,\n    paddingVertical: 7,\n    backgroundColor: '#f1f1f1',\n    borderRadius: 21.6,\n    fontSize: 12,\n  },\n\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  modal: {\n    width: 328,\n    backgroundColor: '#fff',\n    borderWidth: 0.5,\n    borderColor: COLORS.line,\n    borderRadius: 12,\n    paddingHorizontal: 30,\n    paddingVertical: 30,\n  },\n  modalText: {\n    marginBottom: 6,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12,\n  },\n\n  addDday: {\n    flexDirection: 'row',\n    gap: 3,\n  },\n  ddayRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 6,\n  },\n\n  ddayInputRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 10,\n  },\n\n  ddayInput: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 8,\n  },\n\n  groupModal: {\n    backgroundColor: 'white',\n    borderTopLeftRadius: 22,\n    borderTopRightRadius: 22,\n    paddingHorizontal: 31,\n    paddingTop: 40,\n    paddingBottom: 95, \n    width: '100%',\n    position: 'absolute',\n    bottom: 0,\n  },\n  groupModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 19,\n  },\n  modalText: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n  modalSubText: {\n    fontSize: 12,\n  },\n  count: {\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n  groupCreateBtn: {\n    backgroundColor: COLORS.mainColor,\n    borderRadius: 12,\n    alignItems: 'center',\n    paddingVertical: 18,\n    marginBottom: 18,\n  },\n  groupCreateBtnText: {\n    color: '#fff',\n    fontFamily: fonts.semibold,\n    fontSize: 14,\n  },\n  groupJoinBtn: {\n    backgroundColor: COLORS.line,\n    paddingVertical: 18,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 18,\n  },\n  groupJoinBtnText: {\n    color: '#464646',\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n\n})","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nexport default function GlobalScreenWrapper({ children, noPadding = false }) {\n  return (\n    <View style={[styles.screen, noPadding && styles.noPadding]}>\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 50,\n    paddingHorizontal: 31,\n  },\n});\n","import { StyleSheet } from \"react-native\";\nimport { COLORS } from '../../constants/colors';\nimport { fonts } from '../../constants/fonts';\n\nexport const styles = StyleSheet.create({\n  card: {\n    borderWidth: 0.5,\n    borderColor: COLORS.line,\n    borderRadius: 12,\n    marginTop: 25,\n  },\n  header: {\n    backgroundColor: COLORS.mainColor,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderTopLeftRadius: 12,\n    borderTopRightRadius: 12,\n    paddingVertical: 10,\n    paddingHorizontal: 18,\n  },\n  title: {\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: fonts.semibold,\n  },\n  content: {\n    paddingVertical: 15,\n    paddingHorizontal: 18,\n    gap: 10,\n  },\n})","import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, StyleSheet } from 'react-native';\nimport { styles } from './styles/InfoCard.styles';\n\nconst InfoCard = ({ title, icon, onIconPress, children, contentStyle }) => {\n  return (\n    <View style={styles.card}>\n      <View style={styles.header}>\n        <Text style={styles.title}>{title}</Text>\n        <TouchableOpacity onPress={onIconPress}>\n          {icon}\n        </TouchableOpacity>\n      </View>\n      <View style={[styles.content, contentStyle]}>\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default InfoCard;\n","import React, { useEffect, useState } from 'react';\nimport { View, Image, Text, Modal, Button, Alert, TextInput, TouchableOpacity } from 'react-native';\nimport { styles } from './styles/Profile.styles';\nimport GlobalScreenWrapper from '../constants/GlobalScreenWrapper';\nimport BottomNav from \"../components/BottomNav\";\nimport InfoCard from '../components/InfoCard';\nimport EditIcon from '../assets/EditIcon.svg';\nimport TrashIcon from '../assets/TrashIcon.svg';\nimport AddIcon from '../assets/AddIcon.svg';\nimport { useNavigation } from '@react-navigation/native';\nimport { fetchUserInfo, updateUserInfo, fetchDdays, postDday, deleteDday, fetchGroupsByUser } from '../utils/api';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nexport default function ProfileScreen() {\n  const navigation = useNavigation();\n  const [name, setName] = useState(\"\");\n  const [slogan, setSlogan] = useState(\"\");\n  const [profileImage, setProfileImage] = useState(\"\");\n\n  const attendance_count = 8;\n  const heart = 38;\n\n  useEffect(() => {\n    const UserInfo = async () => {\n      try {\n        const user = await fetchUserInfo();\n        setName(user.nickname);\n        setSlogan(user.slogan ?? \"당신의 슬로건을 적어보세요\",);\n        setProfileImage(user.profile_image ?? \"\")\n      } catch (err) {\n        console.error(\"유저 정보 불러오기 실패:\", err);\n      }\n    };\n\n    UserInfo();\n  }, []);\n\n  const [ddayItems, setDdayItems] = useState([]);\n\n  useEffect(() => {\n    const getDdays = async () => {\n      try {\n        const ddays = await fetchDdays();\n        setDdayItems(ddays);\n      } catch (err) {\n        console.log(\"디데이 불러오기 실패: \", err)\n        setDdayItems([]);\n      }\n    }\n    getDdays();\n  }, [])\n\n  const [groupTags, setGroupTags] = useState([]);\n  const currentGroupCount = groupTags.length;\n\n  useEffect(() => {\n    const getGroups = async () => {\n      try {\n        const groups = await fetchGroupsByUser();\n        setGroupTags(groups);\n      } catch (err) {\n        console.log(\"그룹 이름 불러오기 실패: \", err)\n        setGroupTags([]);\n      }\n    }\n    getGroups();\n  }, [])\n\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n  const [showGroupBottomSheet, setShowGroupBottomSheet] = useState(false);\n\n  const handleProfileEdit = () => {\n    setShowProfileEdit(true); // 모달 열기\n  };\n\n  const [showDdayDeleteModal, setShowDdayDeleteModal] = useState(false);\n  const [showDdayAddModal, setShowDdayAddModal] = useState(false);\n  const [ddayTitle, setDdayTitle] = useState('');\n  const [ddayDate, setDdayDate] = useState('');\n\n  const calculateDdayText = (dateStr, title) => {\n    const today = new Date();\n    const target = new Date(dateStr);\n    const diff = Math.ceil((target - today) / (1000 * 60 * 60 * 24)); // 일 수 차이\n\n    let prefix = '';\n    if (diff > 0) prefix = `D-${diff}`;\n    else if (diff === 0) prefix = 'D-day';\n    else prefix = `D+${Math.abs(diff)}`;\n\n    return `${prefix}  ${title}`;\n  };\n\n  const handleAddGroup = () => {\n    setShowGroupBottomSheet(true); // 바텀시트 열기\n  };\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"#fff\" }}>\n      <ScrollView>\n        <GlobalScreenWrapper>\n          <View style={styles.LogoBox}>\n            <Image source={require('../assets/profileLogo.png')} style={styles.Logo} />\n          </View>\n          <View style={styles.profileBox}>\n            <View style={styles.circle}>\n              <Image\n                source={profileImage\n                  ? { uri: `data:image/png;base64,${profileImage}` }\n                  : require('../assets/icon.png')}\n                style={styles.image}\n              />\n            </View>\n            <View style={styles.profile}>\n              <Text style={styles.name}>{name}</Text>\n              <Text style={styles.slogan}>{slogan}</Text>\n            </View>\n          </View>\n          <View style={styles.reactionBox}>\n            <View style={styles.reactions}>\n              <Image source={require('../assets/불.png')} style={styles.reactionImg} />\n              <Text style={styles.reactionText}>{attendance_count}일 연속 채움중</Text>\n            </View>\n            <View style={styles.reactions}>\n              <Image source={require('../assets/하트.png')} style={styles.reactionImg} />\n              <Text style={styles.reactionText}>받은 좋아요 {heart}개</Text>\n            </View>\n          </View>\n\n          <View>\n            <InfoCard title=\"프로필\" icon={<EditIcon />} onIconPress={handleProfileEdit}>\n              <View style={styles.row}>\n                <Text>👤</Text>\n                <Text>{name}</Text>\n              </View>\n              <View style={styles.row}>\n                <Text>💬</Text>\n                <Text>{slogan}</Text>\n              </View>\n            </InfoCard>\n\n            <InfoCard\n              title=\"D-day\"\n              icon={<TrashIcon />}\n              onIconPress={() => setShowDdayDeleteModal(true)}\n            >\n              {ddayItems.map((item) => (\n                <Text key={item.uid}>{calculateDdayText(item.end_at, item.title)}  </Text>\n              ))}\n              <TouchableOpacity style={styles.addDday} onPress={() => setShowDdayAddModal(true)}>\n                <AddIcon fill=\"#C8C8C8\" />\n                <Text style={{ color: '#c8c8c8' }}>디데이 추가하기</Text>\n              </TouchableOpacity>\n            </InfoCard>\n\n            <InfoCard title=\"스터디 그룹\" icon={<AddIcon fill=\"#f1f1f1\" />} onIconPress={handleAddGroup} contentStyle={styles.tagContainer}>\n              {groupTags.map((tag, idx) => (\n                <Text key={idx} style={styles.tag}>{tag.name}</Text>\n              ))}\n            </InfoCard>\n\n            {/* 프로필 수정 모달 */}\n            <Modal visible={showProfileEdit} transparent animationType=\"slide\">\n              <View style={styles.modalContainer}>\n                <View style={styles.modal}>\n                  <Text style={styles.modalText}>이름</Text>\n                  <TextInput\n                    value={name}\n                    onChangeText={setName}\n                    style={styles.input}\n                  />\n                  <Text style={styles.modalText}>슬로건</Text>\n                  <TextInput\n                    value={slogan}\n                    onChangeText={setSlogan}\n                    style={styles.input}\n                  />\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                    <Button title=\"취소\" onPress={() => setShowProfileEdit(false)} />\n                    <Button\n                      title=\"저장\"\n                      onPress={async () => {\n                        try {\n                          await updateUserInfo({ nickname: name, slogan });\n                          Alert.alert(\"프로필이 성공적으로 수정되었습니다.\");\n                          setShowProfileEdit(false);\n                        } catch (err) {\n                          console.error(\"프로필 업데이트 실패:\", err);\n                          Alert.alert(\"프로필 수정 실패\", \"서버 오류가 발생했습니다.\");\n                        }\n                      }}\n                    />\n                  </View>\n                </View>\n              </View>\n            </Modal>\n\n            {/* 디데이 삭제 모달 */}\n            <Modal visible={showDdayDeleteModal} transparent animationType=\"fade\">\n              <View style={styles.modalContainer}>\n                <View style={styles.modal}>\n                  <Text style={styles.modalText}>삭제할 D-day를 선택하세요</Text>\n\n                  {/* {ddayItems && (\n                    <Text style={{ textAlign: 'center', marginVertical: 10 }}>삭제할 항목이 없습니다.</Text>\n                  )} */}\n\n                  {ddayItems.map((item) => (\n                    <View key={item.uid} style={styles.ddayRow}>\n                      <Text style={{ flex: 1 }}>{item.title}</Text>\n                      <Button\n                        title=\"삭제\"\n                        onPress={async () => {\n                          try {\n                            await deleteDday(item.uid);\n                            setDdayItems(prev => prev.filter(dday => dday.uid !== item.uid)); // 로컬 상태 갱신\n                          } catch (err) {\n                            console.log(\"디데이 삭제 실패: \", err)\n                          }\n                        }}\n                      />\n                    </View>\n                  ))}\n\n                  <Button title=\"닫기\" onPress={() => setShowDdayDeleteModal(false)} />\n                </View>\n              </View>\n            </Modal>\n\n            {/* 디데이 추가 모달 */}\n            <Modal visible={showDdayAddModal} transparent animationType=\"slide\">\n              <View style={styles.modalContainer}>\n                <View style={styles.modal}>\n                  <Text style={styles.modalText}>D-day 제목</Text>\n                  <TextInput\n                    placeholder=\"예: 수능\"\n                    value={ddayTitle}\n                    onChangeText={setDdayTitle}\n                    style={styles.input}\n                  />\n\n                  <Text style={styles.modalText}>날짜 (YYYY-MM-DD)</Text>\n                  <TextInput\n                    placeholder=\"예: 2025-07-10\"\n                    value={ddayDate}\n                    onChangeText={setDdayDate}\n                    style={styles.input}\n                    keyboardType=\"numbers-and-punctuation\"\n                  />\n\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                    <Button title=\"취소\" onPress={() => {\n                      setDdayTitle('');\n                      setDdayDate('');\n                      setShowDdayAddModal(false);\n                    }} />\n                    <Button title=\"추가\" onPress={async () => {\n                      if (!ddayTitle.trim() || !ddayDate.trim()) return;\n\n                      try {\n                        await postDday({ title: ddayTitle, end_at: ddayDate });\n\n                        const text = calculateDdayText(ddayDate, ddayTitle);\n                        const newItem = {\n                          id: Date.now(),\n                          text\n                        };\n\n                        setDdayItems(prev => [...prev, newItem]);\n                        setDdayTitle('');\n                        setDdayDate('');\n                        setShowDdayAddModal(false);\n                      } catch (err) {\n                        console.error(\"D-day 추가 실패:\", err);\n                      }\n                    }} />\n                  </View>\n                </View>\n              </View>\n            </Modal>\n\n\n            {/* 그룹 모달 */}\n            <Modal visible={showGroupBottomSheet} transparent animationType=\"slide\">\n              <View style={styles.modalContainer}>\n                <View style={styles.groupModal}>\n                  <View style={styles.groupModalHeader}>\n                    <Text style={styles.modalText}>그룹 추가하기</Text>\n                    <Text style={styles.modalSubText}>현재 참여 그룹 <Text style={styles.count}>{currentGroupCount}개</Text></Text>\n                  </View>\n\n                  <TouchableOpacity\n                    style={styles.groupCreateBtn}\n                    onPress={() => {\n                      setShowGroupBottomSheet(false);\n                      navigation.navigate('GroupName');\n                    }}\n                  >\n                    <Text style={styles.groupCreateBtnText}>새로운 스터디 그룹 만들기</Text>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                    style={styles.groupJoinBtn}\n                    onPress={() => {\n                      setShowGroupBottomSheet(false);\n                      navigation.navigate('GroupJoin1');\n                    }}\n                  >\n                    <Text style={styles.groupJoinBtnText}>친구에게 받은 그룹코드로 참여하기</Text>\n                  </TouchableOpacity>\n\n                  <Button title=\"닫기\" onPress={() => setShowGroupBottomSheet(false)} />\n                </View>\n              </View>\n            </Modal>\n\n          </View>\n\n        </GlobalScreenWrapper >\n      </ScrollView>\n      <BottomNav />\n    </View >\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { loadFonts } from './utils/loadFonts';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { TimerProvider } from './contexts/TimerContext';\nimport './firebase';\n\nimport LoginScreen from './screens/LoginScreen';\nimport NameScreen from './screens/NameScreen';\nimport ProfileImageScreen from './screens/ProfileImageScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport TimerScreen from './screens/TimerScreen';\nimport GroupScreen from './screens/GroupScreen';\nimport RankScreen from './screens/RankScreen';\nimport GroupNameScreen from './screens/GroupNameScreen';\nimport GroupColorScreen from './screens/GroupColorScreen';\nimport GroupCompleteScreen from './screens/GroupCompleteScreen';\nimport GroupJoin1Screen from './screens/GroupJoin1Screen';\nimport GroupJoin2Screen from './screens/GroupJoin2Screen';\nimport ProfileScreen from './screens/ProfileScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [appIsReady, setAppIsReady] = useState(false);\n\n  // 폰트 설정 스플래시 화면\n  useEffect(() => {\n    async function prepare() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n        await loadFonts();\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setAppIsReady(true);\n        await SplashScreen.hideAsync();\n      }\n    }\n\n    prepare();\n  }, []);\n\n  if (!appIsReady) return null;\n\n  return (\n    <TimerProvider>\n      <NavigationContainer>\n        {/* initialRouteName에 자신이 테스트할 페이지 넣기 */}\n        <Stack.Navigator initialRouteName=\"Login\" screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Name\" component={NameScreen} />\n          <Stack.Screen name=\"ProfileImage\" component={ProfileImageScreen} />\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Timer\" component={TimerScreen} />\n          <Stack.Screen name=\"Group\" component={GroupScreen} />\n          <Stack.Screen name=\"Rank\" component={RankScreen} />\n          <Stack.Screen name=\"GroupName\" component={GroupNameScreen} />\n          <Stack.Screen name='GroupColor' component={GroupColorScreen} />\n          <Stack.Screen name='GroupComplete' component={GroupCompleteScreen} />\n          <Stack.Screen name='GroupJoin1' component={GroupJoin1Screen} />\n          <Stack.Screen name='GroupJoin2' component={GroupJoin2Screen} />\n          <Stack.Screen name='Profile' component={ProfileScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </TimerProvider>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import * as Font from 'expo-font';\n\nexport const loadFonts = () => {\n  return Font.loadAsync({\n    'Pretendard-Light': require('../assets/fonts/Pretendard-Light.ttf'),\n    'Pretendard-Regular': require('../assets/fonts/Pretendard-Regular.ttf'),\n    'Pretendard-Medium': require('../assets/fonts/Pretendard-Medium.ttf'),\n    'Pretendard-SemiBold': require('../assets/fonts/Pretendard-SemiBold.ttf'),\n    'Pretendard-Bold': require('../assets/fonts/Pretendard-Bold.ttf'),\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [32], () => (__webpack_require__(1226)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["TimerContext","createContext","TimerProvider","children","isRunning","setIsRunning","useState","elapsed","setElapsed","activeCategory","setActiveCategory","useEffect","timer","setInterval","prev","clearInterval","_jsx","Provider","value","apiKey","authDomain","projectId","appId","Constants","expoConfig","extra","console","log","firebaseConfig","firebase","apps","length","initializeApp","auth","BASE_URL","async","authHeaders","token","SecureStore","getItemAsync","Authorization","api","axios","create","baseURL","timeout","fetchAccumulatedTime","date","headers","get","fetchGroupsByUser","data","fetchUserInfo","interceptors","response","use","res","err","status","deleteItemAsync","Promise","reject","LoginScreen","navigation","iosClientId","webClientId","isLoading","setIsLoading","request","promptAsync","Google","type","authentication","idToken","handleGoogleResponse","rawIdToken","accessToken","Error","credential","GoogleAuthProvider","user","signInWithCredential","firebaseIdToken","getIdToken","post","loginWithGoogle","jwt","backendUser","setItemAsync","String","id","nickname","profile_image","replace","error","Alert","alert","message","_jsxs","View","style","styles","container","Image","source","require","logo","Text","slogan","loginLogo","TouchableOpacity","googleButton","disabledButton","onPress","signOut","prompt","disabled","googleText","WebBrowser","maybeCompleteAuthSession","StyleSheet","flex","alignItems","backgroundColor","fontSize","kakaoButton","width","padding","borderRadius","kakaoText","fontWeight","borderColor","borderWidth","marginTop","height","marginBottom","InputField","onChangeText","placeholder","TextInput","input","paddingHorizontal","paddingVertical","NextButton","title","button","buttonText","justifyContent","color","textAlign","Header","useNavigation","goBack","backArrow","paddingTop","flexDirection","resizeMode","NameScreen","name","setName","text","label","image","trim","patch","registerNickname","btn","marginVertical","position","top","left","ProfileImageScreen","imageUri","setImageUri","imageBase64","setImageBase64","imageWrapper","ImagePicker","requestMediaLibraryPermissionsAsync","result","launchImageLibraryAsync","allowsEditing","quality","base64","canceled","manip","ImageManipulator","manipulateAsync","assets","uri","resize","compress","placeholderText","registerProfileImage","overflow","alignSelf","BottomNav","current","useRoute","item","navigate","icon","borderTopWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","zIndex","paddingBottom","StudyTaskItem","subject","time","onPlusPress","subjectButton","subjectText","plusCircle","plusText","timerSection","timerText","marginRight","COLORS","fonts","TodoBox","gap","row","iconContainer","checkIcon","fontFamily","heart","TodoList","is_completed","initialLiked","memberColor","starred","setStarred","liked","setLiked","Pressable","CheckIcon","LessonSection","groups","setGroups","loading","setLoading","load","fetchHome","then","catch","finally","handleAddTodo","newTitle","group_id","createTodo","group","ActivityIndicator","emptyContainer","emptyImage","map","sec","timer_accumulated_sec","timeString","Math","floor","padStart","groupSection","group_name","todos","todo","user_color","uid","emptyText","profileBox","circle","profile","marginLeft","reactions","reaction","reactionText","Profile","likes","setUser","loadUser","fire","formatHeaderDate","Date","getMonth","getDate","getDay","HomeScreen","insets","useSafeAreaInsets","accumulatedSeconds","setAccumulatedSeconds","today","getTodayDate","d","getFullYear","secs","accumulated_seconds","n","join","ScrollView","contentContainerStyle","body","TimerScreen","startRef","useRef","activeGroup","setActiveGroup","toISOString","slice","totalAccum","setTotalAccum","userId","groupsData","firstId","e","accumulated_sec","is_running","started_at","startMs","getTime","diffSec","now","formatTime","s","closeButton","Ionicons","size","horizontal","showsHorizontalScrollIndicator","chipContainer","g","chip","chipActive","chipText","chipTextActive","timerWrapper","AnimatedCircularProgress","fill","tintColor","rotation","lineCap","timerTextWrapper","timerLabel","timerValue","totalLabel","totalTime","pauseButton","onToggle","handleStop","handleStart","marginHorizontal","info","Box","rankText","code","memberBox","paddingLeft","count","lineHeight","line","groupButton","groupText","SubjectList","selectedGroupId","onSelectGroup","isSelected","column","dayText","star","dateText","daysKor","colors","WeeklyStars","todayDay","startOfWeek","setDate","weekDates","Array","from","_","i","idx","DividerShadow","Svg","Defs","RadialGradient","cx","cy","r","fx","fy","Stop","offset","stopColor","stopOpacity","Ellipse","rx","ry","GroupMemberItem","avatarWrapper","avatar","GroupMemberList","members","scroll","member","profileImage","plusIcon","NameTag","showPlus","GroupScreen","undefined","setSelectedGroupId","warn","loadGroups","groupDetail","setGroupDetail","myNickname","find","m","groupId","fetchGroupDetail","loadGroupDetail","setTodos","fetchTodosByGroup","loadTodos","myTodos","filter","user_id","otherTodosMap","forEach","push","otherMembers","Object","values","formattedDate","DividingLine","secret_code","attendance_count","rank","appbar","arrow","week","weekImg","groupContainer","first","bottom","second","right","third","groupName","oneText","twoText","threeText","trophyImg","one","toggle","activeTab","inactiveTab","groupItem","underline","rankList","groupRow","ranking","attendance","attendanceText","RankScreen","showAll","setShowAll","top3Groups","setTop3Groups","allGroups","setAllGroups","myGroups","setMyGroups","allWithRank","fetchAllGroupRankings","assign","mine","params","fetchMyGroupRankings","loadData","myGroupsWithRank","myGroup","found","visibleGroups","GroupNameScreen","handleNext","ColorPicker","selectedColor","onSelect","colorCircle","flexWrap","GROUP_COLORS","GroupColorScreen","route","setSelectedColor","postGroup","buttonDisabled","mockGroup","GroupCompleteScreen","GroupBox","Group","codeText","GroupCode","LogoImg","btnText","reset","resetText","GroupJoin1Screen","GroupJoin2Screen","LogoBox","Logo","reactionBox","reactionImg","tagContainer","tag","modalContainer","modal","modalText","addDday","ddayRow","ddayInputRow","ddayInput","groupModal","borderTopLeftRadius","borderTopRightRadius","groupModalHeader","modalSubText","groupCreateBtn","groupCreateBtnText","groupJoinBtn","groupJoinBtnText","GlobalScreenWrapper","noPadding","screen","card","header","content","InfoCard","onIconPress","contentStyle","ProfileScreen","setSlogan","setProfileImage","UserInfo","ddayItems","setDdayItems","ddays","fetchDdays","getDdays","groupTags","setGroupTags","currentGroupCount","getGroups","showProfileEdit","setShowProfileEdit","showGroupBottomSheet","setShowGroupBottomSheet","showDdayDeleteModal","setShowDdayDeleteModal","showDdayAddModal","setShowDdayAddModal","ddayTitle","setDdayTitle","ddayDate","setDdayDate","calculateDdayText","dateStr","target","diff","ceil","prefix","abs","handleProfileEdit","end_at","AddIcon","handleAddGroup","Modal","visible","transparent","animationType","Button","updateUserInfo","delete","deleteDday","dday","keyboardType","postDday","newItem","Stack","createStackNavigator","registerRootComponent","appIsReady","setAppIsReady","SplashScreen","Font","loadAsync","prepare","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","getter","__esModule","a","definition","o","defineProperty","enumerable","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}